#########################
# Test STBLIT           #
#########################

DVD_MAKE_VERSION := 2
ifdef IN_OBJECT_DIR

include $(DVD_MAKE)/generic.mak

HEADER_IMPORTS := stsys stapigat/src/patch stapigat/src

ifeq "$(ZEUS_MAKERY_PORT_PTV_MEM)" "true"
SUPPRESS_IMPORT_DEPENDS := true
endif


ifeq ($(ARCHITECTURE),ST40)
ifeq "$(DVD_OS)" "LINUX"
HEADER_IMPORTS += stcommon stapigat/src/linux
else
HEADER_IMPORTS := stsys stapigat/src/patch stapigat/src
endif
else
ifeq ($(DVD_PLATFORM),mb290)
    HEADER_IMPORTS := stsys stapigat/src/patch stapigat/src
endif
endif
ifeq ($(DVD_PLATFORM),mb295)
    HEADER_IMPORTS := stsys stapigat/src/patch stapigat/src
endif

ST20_IMPORTS := stavmem testtool stcommon\
                stevt stapigat stblit stboot sttbx stgxobj

# For 7109 (secured)
ifneq ($(DVD_SECURED_CHIP),)
FULLDIR := $(DVD_ROOT)/dvdgr-prj-stavmem
LDOPTS += $(FULLDIR)/libstmes.a
endif

# Object for ST20
 ST20_OBJS := blt_test.tco


TARGET_WITH_STGPDMA = 5514
ifeq "$(findstring $(DVD_BACKEND), $(TARGET_WITH_STGPDMA))" "$(DVD_FRONTEND)"
  #ST20_IMPORTS += stgpdma
  ST20_IMPORTS := $(ST20_IMPORTS) stgpdma
endif

TARGET_WITH_STFDMA = 5517 5100 5105 7710 7100 5301 5188 5525 7109 5107 7200
ifeq "$(findstring $(DVD_FRONTEND), $(TARGET_WITH_STFDMA))" "$(DVD_FRONTEND)"
  ST20_IMPORTS := $(ST20_IMPORTS) stfdma stos
endif


TARGET_WITH_STINTMR = 7015 7020 GX1
ifeq "$(findstring $(DVD_BACKEND), $(TARGET_WITH_STINTMR))" "$(DVD_BACKEND)"
  #ST20_IMPORTS += stintmr
  ST20_IMPORTS := $(ST20_IMPORTS) stintmr
  TARGET_WITH_STI2C = 5517
  ifeq "$(findstring $(DVD_FRONTEND), $(TARGET_WITH_STI2C))" "$(DVD_FRONTEND)"
    #ST20_IMPORTS += sti2c stpio
    ST20_IMPORTS := $(ST20_IMPORTS) sti2c stpio
  endif
endif

ifeq "$(STBLIT_ENABLE_BASIC_TRACE)" "TRUE"
ST20_IMPORTS := $(ST20_IMPORTS) stpio stuart
endif

ifeq "$(STBLIT_ENABLE_UART_TRACE)" "TRUE"
ST20_IMPORTS := $(ST20_IMPORTS) stpio stuart
endif

# ST40 related
ST40_OBJS = $(call ST20OBJ_TO_ST40OBJ,$(ST20_OBJS))
ST40_IMPORTS = $(ST20_IMPORTS)

# LINUX related
ifeq "$(ZEUS_MAKERY_PORT_PTV_MEM)" "true"
LINUX_IMPORTS :=  stcommon stos stblit stapigat testtool
else
LINUX_IMPORTS := stapigat stblit stavmem stgxobj stcommon stos testtool stlayer
endif
LINUX_IMPORTS += stevt

  # STAVMEM is special in linux - no library is created so we must not add
  # the library to the link command. The following link option suppresses this.
  # This only works currently on LINUX.
  LINUX_libstavmem.a_NOLINK := 1

LINUX_OBJS = $(call ST20OBJ_TO_LINUXOBJ,$(ST20_OBJS))

# ST200 related
ST200_IMPORTS := $(ST20_IMPORTS)
ST200_OBJS := $(call ST20OBJ_TO_ST200OBJ,$(ST20_OBJS))


# For compilation of pti+link or stpti
CFLAGS := $(CFLAGS) $(OPTIONAL_CFLAGS)



# For output of toolbox
CFLAGS := $(CFLAGS) -D STTBX_PRINT -D STTBX_INPUT -D STTBX_NO_UART -D STTBX_REPORT
DVD_CFLAGS := $(DVD_CFLAGS) -D STTBX_NO_UART

ifdef BLIT_FULL_USER
DVD_CFLAGS := $(DVD_CFLAGS) -DSTBLIT_LINUX_FULL_USER_VERSION
CFLAGS := $(CFLAGS) -DSTBLIT_LINUX_FULL_USER_VERSION
endif

ifeq "$(DVD_OS)" "LINUX"
DVD_CFLAGS := $(DVD_CFLAGS) -DSTTBX_PRINT -DSTLINUX_RT_THREADS
endif

# debug / cache related flags
ifneq ($(DEBUG),)
  STBLIT_ICACHE_DISABLED := 1
  STBLIT_DCACHE_DISABLED := 1
endif
ifeq ($(STBLIT_DCACHE_DISABLED),)
    #STAPIGAT_FLAGS += -D DCACHE_ENABLE
    STAPIGAT_FLAGS := $(STAPIGAT_FLAGS) -D DCACHE_ENABLE
endif
ifeq ($(STBLIT_ICACHE_DISABLED),)
    #STAPIGAT_FLAGS += -D ICACHE_ENABLE
    STAPIGAT_FLAGS := $(STAPIGAT_FLAGS) -D ICACHE_ENABLE
endif

#STAPIGAT_FLAGS += -D STTBX_NO_UART
STAPIGAT_FLAGS := $(STAPIGAT_FLAGS) -D STTBX_NO_UART

# Specific mb290 option
ifeq "$(DVD_PLATFORM)" "mb290"
    STCOMMON_OPTIONS := -DREMOVE_GENERIC_ADDRESSES -DUSE_5514_GENERIC_ADDRESSES
    STPTI_OPTIONS := -DREMOVE_GENERIC_ADDRESSES -DUSE_5514_GENERIC_ADDRESSES
    #STAPIGAT_FLAGS += -DSTGPDMA_SINGLE_INTERRUPT
    STAPIGAT_FLAGS := $(STAPIGAT_FLAGS) -DSTGPDMA_SINGLE_INTERRUPT
endif

ifeq "$(ARCHITECTURE)" "ST200"
	STAPIGAT_FLAGS += -DICACHE_ENABLE
#        STAPIGAT_FLAGS += -DDCACHE_ENABLE
endif

# Following options are temporary !!!!
# Remove DDR test for STi7020 cut 1.0
ifeq "$(DVD_BACKEND)" "7020"
    #STBOOT_OPTIONS += -DSTBOOT_DISABLE_RAM_TESTS
    STBOOT_OPTIONS := $(STBOOT_OPTIONS) -DSTBOOT_DISABLE_RAM_TESTS
endif
#end of temporary !!!



ifeq "$(STBLIT_SOFTWARE)" "TRUE"
CFLAGS := $(CFLAGS) -D STBLIT_SOFTWARE -D STBLIT_EMULATOR
else
ifeq "$(STBLIT_EMULATOR)" "TRUE"
CFLAGS := $(CFLAGS) -D STBLIT_EMULATOR
else
ifeq "$(DVD_BACKEND)" "5518"
CFLAGS := $(CFLAGS) -D STBLIT_EMULATOR
else
ifeq "$(DVD_BACKEND)" "5508"
CFLAGS := $(CFLAGS) -D STBLIT_EMULATOR
else
ifeq "$(DVD_BACKEND)" "5512"
CFLAGS := $(CFLAGS) -D STBLIT_EMULATOR
endif
ifeq "$(DVD_BACKEND)" "5514"
CFLAGS := $(CFLAGS) -D STBLIT_EMULATOR
endif
ifeq "$(DVD_BACKEND)" "5516"
CFLAGS := $(CFLAGS) -D STBLIT_EMULATOR
endif
ifeq "$(DVD_BACKEND)" "5517"
CFLAGS := $(CFLAGS) -D STBLIT_EMULATOR
endif
endif
endif
endif
endif

ifeq "$(STBLIT_TEST_FRONTEND)" "TRUE"
CFLAGS := $(CFLAGS) -D STBLIT_TEST_FRONTEND
endif

# For 7109 (secured)
ifneq ($(DVD_SECURED_CHIP),)
DVD_CFLAGS := $(DVD_CFLAGS) -DDVD_SECURED_CHIP
CFLAGS := $(CFLAGS) -D DVD_SECURED_CHIP
endif


#For secured node allocation
ifneq ($(SECURED_NODE),)
DVD_CFLAGS := $(DVD_CFLAGS) -DSECURED_NODE
CFLAGS := $(CFLAGS) -D SECURED_NODE
endif

#For secured source bitmap allocation
ifneq ($(SECURED_BITMAP),)
DVD_CFLAGS := $(DVD_CFLAGS) -DSECURED_BITMAP
CFLAGS := $(CFLAGS) -D SECURED_BITMAP
endif

ifeq "$(STBLIT_DEBUG_GET_STATISTICS)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D STBLIT_DEBUG_GET_STATISTICS
CFLAGS := $(CFLAGS) -D STBLIT_DEBUG_GET_STATISTICS
STAPIGAT_FLAGS := $(STAPIGAT_FLAGS) -D STBLIT_DEBUG_GET_STATISTICS
endif

ifeq "$(STBLIT_DEBUG_GET_STATISTICS_APPLICATION_LEVEL)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D STBLIT_DEBUG_GET_STATISTICS_APPLICATION_LEVEL
endif


ifeq "$(STBLIT_DEBUG_STATISTICS_USE_FIRST_AND_LAST_TIME_VALUE_ONLY)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D STBLIT_DEBUG_STATISTICS_USE_FIRST_AND_LAST_TIME_VALUE_ONLY
CFLAGS := $(CFLAGS) -D STBLIT_DEBUG_STATISTICS_USE_FIRST_AND_LAST_TIME_VALUE_ONLY
STAPIGAT_FLAGS := $(STAPIGAT_FLAGS) -D STBLIT_DEBUG_STATISTICS_USE_FIRST_AND_LAST_TIME_VALUE_ONLY
endif

ifeq "$(STBLIT_ENABLE_UART_TRACE)" "TRUE"
CFLAGS := $(CFLAGS) -D STBLIT_ENABLE_UART_TRACE
STAPIGAT_FLAGS := $(STAPIGAT_FLAGS) -D STBLIT_ENABLE_UART_TRACE
endif

ifeq "$(STBLIT_USE_EXTERN_TARGET_BITMAP_FOR_TEST)" "TRUE"
CFLAGS := $(CFLAGS) -D STBLIT_USE_EXTERN_TARGET_BITMAP_FOR_TEST
STAPIGAT_FLAGS := $(STAPIGAT_FLAGS) -D STBLIT_USE_EXTERN_TARGET_BITMAP_FOR_TEST
endif

ifeq "$(TEST_FEATURES_FULL_MODE)" "TRUE"
CFLAGS := $(CFLAGS) -D TEST_FEATURES_FULL_MODE
STAPIGAT_FLAGS := $(STAPIGAT_FLAGS) -D TEST_FEATURES_FULL_MODE
endif

ifeq "$(TEST_FEATURES_REPORT_ONLY_FAILED_TESTS)" "TRUE"
CFLAGS := $(CFLAGS) -D TEST_FEATURES_REPORT_ONLY_FAILED_TESTS
STAPIGAT_FLAGS := $(STAPIGAT_FLAGS) -D TEST_FEATURES_REPORT_ONLY_FAILED_TESTS
endif

ifeq "$(TEST_FEATURES_NO_COLOR_CONVERSION)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURES_NO_COLOR_CONVERSION
endif

ifeq "$(TEST_FEATURES_NO_COPY)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURES_NO_COPY
endif

ifeq "$(TEST_FEATURES_NO_FILL)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURES_NO_FILL
endif

ifeq "$(TEST_FEATURES_NO_BLEND_BITMAP)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURES_NO_BLEND_BITMAP
endif

ifeq "$(TEST_FEATURES_NO_BLEND_COLOR)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURES_NO_BLEND_COLOR
endif

ifeq "$(TEST_FEATURES_NO_COPY2SRC)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURES_NO_COPY2SRC
endif

ifeq "$(TEST_FEATURES_NO_CLIP)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURES_NO_CLIP
endif

ifeq "$(TEST_FEATURES_NO_RESIZE)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURES_NO_RESIZE
endif

ifeq "$(TEST_FEATURES_NO_MASK_WORD)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURES_NO_MASK_WORD
endif

ifeq "$(TEST_FEATURES_NO_COLOR_KEY)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURES_NO_COLOR_KEY
endif

ifeq "$(TEST_FEATURES_NO_JOB)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURES_NO_JOB
endif

ifeq "$(TEST_FEATURES_NO_SETPIXEL)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURES_NO_SETPIXEL
endif


ifeq "$(TEST_FEATURES_NO_DRAWLINE)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURES_NO_DRAWLINE
endif

ifeq "$(TEST_FEATURES_NO_VC1_RANGE)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURES_NO_VC1_RANGE
endif

ifeq "$(TEST_FEATURES_NO_ALU)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURES_NO_ALU
endif

ifeq "$(TEST_FEATURES_NO_OVERLAP_COPY)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURES_NO_OVERLAP_COPY
endif

ifeq "$(TEST_FEATURES_NO_OVERLAP_BLIT)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURES_NO_OVERLAP_BLIT
endif

ifeq "$(TEST_FEATURES_NO_ANTIALIASING)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURES_NO_ANTIALIASING
endif

ifeq "$(TEST_FEATURES_NO_ANTIFLUTTER)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURES_NO_ANTIFLUTTER
endif

ifeq "$(TEST_FEATURE_SAVE_OUTPUT_BITMAP)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURE_SAVE_OUTPUT_BITMAP
endif

ifeq "$(TEST_FEATURES_SAVE_CRC_VALUES)" "TRUE"
DVD_CFLAGS := $(DVD_CFLAGS) -D TEST_FEATURES_SAVE_CRC_VALUES
endif


# Target
ST20_TARGETS = blt_test.lku
ifeq "$(DVD_OS)" "LINUX"
ifeq "$(ZEUS_STAPI_PTV_BUILD)" "ON"
ST40_TARGETS = libstapi-$(PTV_PRD_OR_DBG).a
else
ST40_TARGETS = $(call ST20EXE_TO_LINUXEXE,$(ST20_TARGETS))
endif
ST40_TARGETS_OTHER = $(ST20_TARGETS_OTHER)
else
ST40_TARGETS = $(call ST20EXE_TO_ST40EXE,$(ST20_TARGETS))
endif
ST200_TARGETS = $(call ST20EXE_TO_ST200EXE,$(ST20_TARGETS))




#Pick up standard targets
include $(DVD_MAKE)/defrules.mak

stintmr.lib: DVD_CFLAGS := $(DVD_CFLAGS) -DSTINTMR_USE_EVT
        export DVD_CFLAGS
stblit.lib: DVD_CFLAGS := -DSTTBX_PRINT -D STTBX_REPORT  -D STTBX_NO_UART
	export DVD_CFLAGS
stboot.lib libstboot.a:\
        #DVD_CFLAGS += $(STBOOT_OPTIONS)
        DVD_CFLAGS := $(DVD_CFLAGS) $(STBOOT_OPTIONS)


ifeq "$(DVD_PLATFORM)" "mb290"
stgpdma.lib libstgpdma.a: STGPDMA_SINGLE_INTERRUPT=1
      export STGPDMA_SINGLE_INTERRUPT
endif

sttbx.lib libsttbx.a:  DVD_CFLAGS := $(DVD_CFLAGS) -DSTTBX_NO_UART
	export DVD_CFLAGS

# Specific compilation flags
stapigat.lib:\
    #DVD_CFLAGS += $(STAPIGAT_FLAGS) -DSTTBX_PRINT -DSTTBX_INPUT
    DVD_CFLAGS := $(DVD_CFLAGS) $(STAPIGAT_FLAGS) -DSTTBX_PRINT -DSTTBX_INPUT
    STAPIGAT_INCLUDE := stblit/tests/src $(STAPIGAT_INCLUDE_PATH)
    STAPIGAT_IMPORTS_ST20 := $(ST20_IMPORTS)
ifeq "$(DVD_OS)" "LINUX"
    STAPIGAT_IMPORTS_ST40 := $(LINUX_IMPORTS)
else
    STAPIGAT_IMPORTS_ST40 := $(ST40_IMPORTS)
endif

    STAPIGAT_IMPORTS_ST200 := $(ST200_IMPORTS)


    ifeq "$(DVD_PLATFORM)" "mb290"
    STGPDMA_SINGLE_INTERRUPT=1
    export STGPDMA_SINGLE_INTERRUPT
    endif

    export STAPIGAT_INCLUDE
    export STAPIGAT_IMPORTS_ST20
    export STAPIGAT_IMPORTS_ST40

stavmem.lib libstavmem.a:
    STAVMEM_NO_GPDMA=1
    export STAVMEM_NO_GPDMA
    ifeq "$(DVD_PLATFORM)" "mb290"
    STAVMEM_NO_2DBM=1
    export STAVMEM_NO_2DBM
    endif

stcommon.lib libstcommon.a:\
        #DVD_CFLAGS += $(STCOMMON_OPTIONS)
        DVD_CFLAGS := $(DVD_CFLAGS) $(STCOMMON_OPTIONS)

# DVD_CFLAGS would be exported for recursive makefile (not CFLAGS)
export DVD_CFLAGS

libstintmr.a: DVD_CFLAGS := $(DVD_CFLAGS) -DSTINTMR_USE_EVT
	export DVD_CFLAGS
lib_stblit.a: DVD_CFLAGS := $(DVD_CFLAGS) -DSTTBX_PRINT -D STTBX_REPORT -DSTTBX_NO_UART
	export DVD_CFLAGS
ifeq "$(DVD_BACKEND)" "7020"
libstboot.a:\
        #DVD_CFLAGS += $(STBOOT_OPTIONS)
        DVD_CFLAGS := $(DVD_CFLAGS) $(STBOOT_OPTIONS)
export DVD_CFLAGS
endif
# Specific compilation flags
ifeq "$(ARCHITECTURE)" "ST40"

libstapigat.a:\
        DVD_CFLAGS := $(DVD_CFLAGS) $(STAPIGAT_FLAGS) -DSTTBX_PRINT -DSTTBX_INPUT -DSTTBX_NO_UART

#    STAPIGAT_INCLUDE := stblit/tests/src $(STAPIGAT_INCLUDE_PATH)
    STAPIGAT_INCLUDE := stblit/tests/src $(ST40_IMPORTS)
ifeq "$(DVD_OS)" "LINUX"
    STAPIGAT_IMPORTS_ST40 := $(LINUX_IMPORTS)
else
    STAPIGAT_IMPORTS_ST40 := $(ST40_IMPORTS)
endif
    export STAPIGAT_INCLUDE
    export STAPIGAT_IMPORTS_ST40

endif

ifeq "$(ARCHITECTURE)" "ST200"
libstapigat.a:\
    DVD_CFLAGS = $(STAPIGAT_FLAGS) -DSTTBX_PRINT -DSTTBX_INPUT -DSTTBX_NO_UART
    STAPIGAT_INCLUDE := stblit/tests/src $(STAPIGAT_INCLUDE_PATH)
    STAPIGAT_IMPORTS_ST200 := $(ST200_IMPORTS)
    export STAPIGAT_INCLUDE
    export STAPIGAT_IMPORTS_ST200
endif


ifeq "$(DVD_PLATFORM)" "mb290"
libstcommon.a:\
            #DVD_CFLAGS += $(STCOMMON_OPTIONS)
            DVD_CFLAGS := $(DVD_CFLAGS) $(STCOMMON_OPTIONS)
endif

# DVD_CFLAGS would be exported for recursive makefile (not CFLAGS)
export DVD_CFLAGS

# Build general application for DRAM
blt_test_INIT := board_init
BOARDSPECS=
ifeq "$(ARCHITECTURE)" "ST40"
	ifeq "$(DVD_BACKEND)" "7200"
	export USE_MBOARD=board_$(DVD_PLATFORM)_lmi0_$(MULTICOM_COMPANION_CONFIG)
	BOARDSPECS=-specs=$(DVD_ROOT)/dvdgr-prj-stapigat/src/boardspecs_7200
	endif
endif


$(ST20_TARGETS): $(ST20_OBJS)  $(IMPORT_LIBS)
	$(LINK_EXECUTABLE)

ifeq "$(ARCHITECTURE)" "ST40"
$(ST40_TARGETS): $(ST40_OBJS) $(IMPORT_LIBS) $(SUBDIR_LIBS)
ifeq "$(ZEUS_STAPI_PTV_BUILD)" "ON"
	$(PK_BUILD_LIBRARY)
	@$(CP) $(DEVPATH)/dvdgr-prj-stblit/tests/src/objs/LINUX/$(ST40_TARGETS) $(DVD_EXPORTS)/
	@$(RM) $(DVD_EXPORTS)/liblinux.a $(DVD_EXPORTS)/libstapigat.a $(DVD_EXPORTS)/libstblit.a $(DVD_EXPORTS)/libstcommon.a $(DVD_EXPORTS)/libstevt.a $(DVD_EXPORTS)/libtesttool.a
else
	@$(ECHO) Linking $@
	$(LINK_EXECUTABLE) $(BOARDSPECS)
endif
endif

ifeq "$(ARCHITECTURE)" "ST200"
$(ST200_TARGETS): $(ST200_OBJS) $(IMPORT_LIBS) $(SUBDIR_LIBS)
	@$(ECHO) Linking $@
	$(LINK_EXECUTABLE)
endif

# Build test application but ignore dependencies
test20: $(ST20_OBJS) $(SUBDIR_LIBS)
	$(CC) $(LIBRARIES) -T $(DVD_PLATFORM).cfg \
        $(ST20_LKFLAGS) $(blt_test_LKFLAGS) $(blt_test_ST20_LKFLAGS) \
        $^ $(IMPORT_LIBS) $(OSLIBS) -p $(blt_test_INIT) -o $(ST20_TARGETS)

clean: $(SUBDIR_CLEAN)
	@$(ECHO) Cleaning $(TARGETS)
	-$(RM) $($(OBJECT_DIRECTORY)_OBJS)
	-$(RM) $($(OBJECT_DIRECTORY)_TARGETS) $($(OBJECT_DIRECTORY)_TARGETS_OTHER)
ifeq "$(ARCHITECTURE)" "ST20"
	-$(RM) $(subst .lku,.dbg,$($(OBJECT_DIRECTORY)_TARGETS))
	-$(RM) $(subst .lku,.map,$($(OBJECT_DIRECTORY)_TARGETS))
endif


else

include $(DVD_MAKE)/builddir.mak

endif

# End of sample ST20/ST40/ST200 makefile

