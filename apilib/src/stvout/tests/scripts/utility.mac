; ****************************************************************************
; File         : UTILITY.MAC
; Requirements :
; Author       : Jacques GAMON  - November 2000
;                Adel Chaouch   - Sepetember 2004
; ****************************************************************************
; General utilities for VOUT test

; general behavior :
; driver is assumed to be not initialized before starting these file tests

del M_*
BUFF_ADD=0
MAIN_INITIALISED=0
FALSE_=0
TRUE_=1
EXEC_ALL_TEST=0
GLOBERR=FALSE_
ERR_BAS=FALSE_
ERR_ALRIN=FALSE_
ERR_BADP=FALSE_
ERR_NOMEM=FALSE_
ERR_DENCA=FALSE_
ERR_INVHN=FALSE_
ERR_NOFRE=FALSE_
ERR_OPENH=FALSE_
ERR_UNKDE=FALSE_
ERR_VNOTA=FALSE_
ERR_VNOTE=FALSE_
ERR_VENAB=FALSE_
ERR_VINCO=FALSE_
ERR_FNOTS=FALSE_
ERR_T100=FALSE_
ERR_T101=FALSE_
ERR_T102=FALSE_
ERR_T103=FALSE_
ERR_T104=FALSE_
ERR_T105=FALSE_
ERR_T106=FALSE_
ERR_T107=FALSE_
ERR_T108=FALSE_
ERR_T109=FALSE_
ERR_T110=FALSE_
ERR_T111=FALSE_
ERR_T200=FALSE_
ERR_T201=FALSE_
ERR_T202=FALSE_
ERR_T203=FALSE_
ERR_T204=FALSE_
ERR_T205=FALSE_
ERR_T206=FALSE_
ERR_T300=FALSE_
ERR_T301=FALSE_
ERR_T302=FALSE_
ERR_T303=FALSE_
ERR_T304=FALSE_
ERR_T305=FALSE_
ERR_T306=FALSE_
ERR_T307=FALSE_
ERR_T308=FALSE_
ERR_T309=FALSE_
ERR_T310=FALSE_
ERR_T311=FALSE_
ERR_T400=FALSE_
ERR_T401=FALSE_
ERR_T402=FALSE_
ERR_T403=FALSE_
ERR_T500=FALSE_
ERR_T501=FALSE_
ERR_T502=FALSE_
ERR_T503=FALSE_
ERR_T504=FALSE_
ERR_T505=FALSE_
ERR_T600=FALSE_
ERR_T601=FALSE_
ERR_T602=FALSE_
ERR_T700=FALSE_
ERR_T701=FALSE_
ERR_T702=FALSE_
ERR_T703=FALSE_
ERR_T800=FALSE_
ERR_T801=FALSE_
ERR_T802=FALSE_
ERR_T803=FALSE_
ERR_MULT=FALSE_

TESTRGB=TRUE_
TESTYUV=TRUE_
TESTYC=TRUE_
TESTCVBS=TRUE_
TESTDAC=TRUE_
TESTBRI=TRUE_
TESTCON=TRUE_
TESTSAT=TRUE_
TESTBCS=TRUE_
TESTCHR=TRUE_
TESTLUM=TRUE_
TESTSVM=TRUE_
TEST444_24=TRUE_
TEST422_16=TRUE_
TEST422_8=TRUE_
TEST888_24=TRUE_
TESTHDRGB=TRUE_
TESTHDYUV=TRUE_

TESTRGB_DAC123=TRUE_
TESTRGB_DAC456=TRUE_
TESTYUV_DAC456=TRUE_
TESTYUV_DAC123MAIN=TRUE_
TESTYUV_DAC456AUX=TRUE_
TESTYC_DAC12=TRUE_
TESTYC_DAC45=TRUE_
TESTCVBS_DAC1MAIN=TRUE_
TESTCVBS_DAC5MAIN=TRUE_
TESTCVBS_DAC2AUX=TRUE_
TESTCVBS_DAC2=TRUE_
TESTCVBS_DAC4AUX=TRUE_
TESTCVBS_DAC3=TRUE_
TESTCVBS_DAC6=TRUE_

TESTRGB1_DAC123=TRUE_
TESTYUV1_DAC123=TRUE_
TESTYC1_DAC12=TRUE_
TESTCVBS1_DAC3=TRUE_

TESTBASIC=TRUE_
TESTREt=TRUE_
TESTMACHINE=TRUE_
TESTEDID=TRUE_

;is there a programmable VTG cell on chip
VTGPROG=0
;external DENC tests
EXTERNAL_DENC=0
;HD capable platform
HDOUT=0
; Output on HD_DACS
HDDACS=0
; no error stop
api_error 0
; error ?
ERRORCOUNT=0
;
DEVICETYPE=VOUT_DEVICE_TYPE_AUTO
; Denc Version :
DENCVERSION=0
; Output Type :
OUTPUTTYPE="..........."
; DVI/HDMI interface
INTERFACE=0
; Encryption Enable by default
ENCRYPTION=1
;Video Handle
HDLVID1=0
; View port handle
HDLVPVID1=0
;Layer init
LAYER_ON=FALSE_
HDMI_OFFSET=0


; Print option (no by default)
PRNT=0
define M_DEFINE_PRNT
    PRNT=1
end
define M_PRINT
  print " ERRORCOUNT    " ERRORCOUNT
  print " EXTERNAL_DENC " EXTERNAL_DENC
  print " DENCVERSION   " DENCVERSION
  print " DEVICETYPE    " DEVICETYPE
  print " OUTPUTTYPE    " OUTPUTTYPE
  print " PRNT          " PRNT
end

define M_CHECK_RETCODE EXPECTED
    if ERRORCODE!=EXPECTED
        ERRORCOUNT=ERRORCOUNT+1
        print ">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Expected code:" EXPECTED
    end
end

define M_CHECK_EXPECTED_PARAM PARAM EXPECTED
    if PARAM!=EXPECTED
        ERRORCOUNT=ERRORCOUNT+1
        print "                " PARAM "           " EXPECTED
        print "^^^^^^^^^^^^^^ get ^^^^^ expected"
    end
end

define M_CHECK_UNEXPECTED_PARAM PARAM UNEXPECTED
    if PARAM==UNEXPECTED
        ERRORCOUNT=ERRORCOUNT+1
        print "                " PARAM "           " UNEXPECTED
        print "^^^^^^^^^^^^^^ get ^^^^^ unexpected"
    end
end


;
define M_CHECK_ERROR
    print ""
    if ERRORCOUNT>0
        print "        ++++++++++++++++++++++++++++++++++"
        print "        + " ERRORCOUNT " function(s) failed the test +"
        print "        ++++++++++++++++++++++++++++++++++"
        GLOBERR=TRUE_
    end
    else
        print "        =================================="
        print "        == TEST COMPLETED SUCCESSFULLY. =="
        print "        =================================="
        GLOBERR=FALSE_
    end
    print ""
end

define M_CHECK_TEST_ERROR EXPECTED
    print ""
    if ERRORCOUNT>0
        print "        ++++++++++++++++++++++++++++++++++"
        print "        + " ERRORCOUNT " function(s) failed the test +"
        print "        ++++++++++++++++++++++++++++++++++"
        GLOBERR=TRUE_
    end
    else
        print "      =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+="
        ERRCNT=api_checkerr EXPECTED "      == "
        print "      =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+="
        if ERRCNT!=EXPECTED
          GLOBERR=TRUE_
        end
        else
          GLOBERR=FALSE_
        end
    end
    print ""
end


define M_DENC_INIT
  if ((EXTERNAL_DENC==1)&&(DEVICETYPE==VOUT_DEVICE_TYPE_4629))
        print "External denc selected"
        denc_init , , 4
  end
  else
        print "Internal denc selected"
        denc_init
  end
  str=denc_capa
  DENCVERSION=api_evalstr str 5
  denc_open
  denc_setmode
  if API_CHIPID=="7015"
     vtg_init ,,h8000

  end
  elif API_CHIPID=="7020"
     vtg_init ,,h8000
  end
  ; for 7710 use VTG1
  elif API_CHIPID=="7710"
     if (CHIP_CUT=="STI7710_CUT2x")
        vtg_init ,,h20103000
     end
     else
        vtg_init ,, h20103c00
     end
 end
 elif (API_CHIPID=="7100")||(API_CHIPID=="7109")
     vtg_init
 end
 elif (API_CHIPID=="7200")
      ; init vtg2 for SD output
      vtg_init ,, hFD10C200
 end
 elif ((EXTERNAL_DENC==1)&&(DEVICETYPE==VOUT_DEVICE_TYPE_4629))
     vtg_init , "TYPE_DENC"
  end
  else
     vtg_init
  end
  vtg_open
  if ((EXTERNAL_DENC==1)&&(DEVICETYPE==VOUT_DEVICE_TYPE_4629))
    vtg_setmode , "MODE_SLAVE"
  end
  else
    vtg_setmode
  end
end

define M_DENC_TERM
  vtg_close
  vtg_term
  denc_term ,1
end
define M_DENC_AUX_INIT
   if (API_CHIPID=="5525")
        denc_init "DENC2" ,,, h19B00000
        str=denc_capa "DENC2"
        DENCVERSION=api_evalstr str 5
        HDLDENC2=denc_open "DENC2"
        denc_setmode HDLDENC2

        vtg_init "VTG2" , h19B00400
        HDLVTGAUX=vtg_open "VTG2"
        vtg_setmode HDLVTGAUX
   end
   else
     print "defined only for STi5525"
   end
end

define M_DENC_AUX_TERM
  vtg_close HDLVTGAUX
  vtg_term  "VTG2"
  denc_term "DENC2" 1
end
DHd119=0
DHdint=0

; choice of the platform :
; different capabilities on platform
define M_CHECK_PLATFORM
    print ">>platform test : "
    ckchoice=""
    ;default values, will be overwritten if necessary
    print " outputs on" API_BOARDID " are :"

    if (DEVICETYPE==VOUT_DEVICE_TYPE_DENC)||(DEVICETYPE==VOUT_DEVICE_TYPE_DENC_ENHANCED)||(DEVICETYPE==VOUT_DEVICE_TYPE_V13)||(DEVICETYPE==VOUT_DEVICE_TYPE_5525)
       print " Analog RGB, YUV, YC, CVBS"
    end
    if (DEVICETYPE==VOUT_DEVICE_TYPE_GX1)||(DEVICETYPE==VOUT_DEVICE_TYPE_5528)
       print " 2 x Analog RGB, YUV, YC, CVBS"
    end
    if (DEVICETYPE==VOUT_DEVICE_TYPE_7015)||(DEVICETYPE==VOUT_DEVICE_TYPE_7020)
       print " SD Analog RGB, YUV, YC, CVBS"
       print " HD Analog RGB, YUV "
       print " Digital YCbCr RGB"
       print " SVM"
       ;HD capable platform
       HDOUT=1
    end
    if (API_CHIPID=="7710")
       print " SD Analog YUV, YC, CVBS"
       print " HD Analog RGB, YUV "
       print " HDMI RGB, YCBCR"
       ;HD capable platform
       HDOUT=1
    end
    if (API_CHIPID=="7100")||(API_CHIPID=="7109")||(API_CHIPID=="7200")
       print " SD Analog RGB, YUV, YC, CVBS"
       print " HD Analog RGB, YUV "
       print " HDMI RGB, YCBCR"
       ;HD capable platform
       HDOUT=1
    end
    if (API_CHIPID=="5105")||(API_CHIPID=="5188")
    ;This poke is used only for the test aplication of the driver
     poke h20402004 h0
    end
    if (API_CHIPID=="5514")||(API_CHIPID=="5516")||(API_CHIPID=="5517")||(API_CHIPID=="5100")||(API_CHIPID=="5301")
       ok=0
       while ok==0
          print "> Digital Output? (Y/N)"
          print " Enter your choice :"
          ckchoice=getstring
          if ckchoice=="N"
             if API_CHIPID=="5516"
                DEVICETYPE=VOUT_DEVICE_TYPE_DENC_ENHANCED
             end
             elif (API_CHIPID=="5100")||(API_CHIPID=="5301")
                DEVICETYPE=VOUT_DEVICE_TYPE_V13
             end
             elif (API_CHIPID=="7710")
                DEVICETYPE=VOUT_DEVICE_TYPE_7710
             end
             elif (API_CHIPID=="7100")||(API_CHIPID=="7109")
                DEVICETYPE=VOUT_DEVICE_TYPE_7100
             end
             elif (API_CHIPID=="7200")
                DEVICETYPE=VOUT_DEVICE_TYPE_7200
             end
             else
                DEVICETYPE=VOUT_DEVICE_TYPE_DENC
             end
          print " no"
          ok=1
          end
          if ckchoice=="Y"
             DEVICETYPE=VOUT_DEVICE_TYPE_DIGOUT
             print " output on " API_BOARDID " is :"
             print " Digital YCbCr 8bits multiplexed CCIR601/656"
             ok=1
          end
       end
    end
    if (API_BOARDID=="mb295")||(API_BOARDID=="mb376")||(API_BOARDID=="espresso")
       ok=0
       while ok==0
          print " Select external DENC? (Y/N)"
          ckchoice=getstring
          if ckchoice=="N"
             DEVICETYPE=VOUT_DEVICE_TYPE_AUTO
             EXTERNAL_DENC=0
             ok=1

             if (MAIN_INITIALISED==1)
                vout_term "VOUT_DIGITAL" 1
                vtg_term "MAIN_VTG" 1
                str=denc_capa "MAIN_DENC"
                DENCVERSION=api_evalstr str 5
                denc_term "MAIN_DENC" 1
                MAIN_INITIALISED=0
             end
          end
          if ckchoice=="Y"
             ok=1
             EXTERNAL_DENC=1
             if (((API_BOARDID=="mb376")||(API_BOARDID=="espresso"))&&(MAIN_INITIALISED==0))
                print "Initialising digital output on STi5528"
                denc_init "MAIN_DENC"
                str=denc_capa "MAIN_DENC"
                DENCVERSION =api_evalstr str 5
                MAIN_DENC_HDL=denc_open "MAIN_DENC"
                denc_setmode MAIN_DENC_HDL
                vout_init "VOUT_DIGITAL" VOUT_DEVICE_TYPE_DIGOUT
                MAIN_VOUT_HDL = vout_open "VOUT_DIGITAL"
                vout_setparams MAIN_VOUT_HDL "YCbCr422_8" 0
                vout_init "MAIN_CVBS" VOUT_DEVICE_TYPE_5528 "CVBS" "MAIN_DENC" , , 32 0
                hndcvbs = vout_open "MAIN_CVBS"
                vout_setparams hndcvbs "RGB"
                vout_enable hndcvbs

                vtg_init "MAIN_VTG"
                vtg_open "MAIN_VTG"
                vtg_setmode
                ; Setting device type to 4629
                MAIN_INITIALISED=1
                DEVICETYPE = VOUT_DEVICE_TYPE_4629
             end
          end
       end
    end
end

define M_LAYER_INIT
    if (API_CHIPID=="7100")
        layer_init "LAYVID1" "HDDISPO2_VIDEO1" 720 576
    end
    elif (API_CHIPID=="7109")
        layer_init "LAYVID1" "VDP_VIDEO1" 720 576
    end
    HDLVID1 = layer_open "LAYVID1"
    HDLVPVID1 = layer_openvp HDLVID1 0 0 720 576 BUFF_ADD 0 0 720 576
    layer_enable HDLVPVID1
    layer_svpparams HDLVPVID1 ,, 720+HDMI_OFFSET 576+HDMI_OFFSET 720/3 200 360*3 288*3 1 720 576 BUFF_ADD
    LAYER_ON=TRUE_
end

define M_LAYER_TERM
  if LAYER_ON==TRUE_
    layer_closevp HDLVPVID1
    layer_close HDLVID1
    layer_term "LAYVID1" 1
    LAYER_ON=FALSE_
  end
end

define M_CHECK_BAS_ERR ERRB
  print ""
  print "###########################################################"
  if ERRB==FALSE_
    print "# Basic Test.                                      Ok     #"
  end
  else
    print "# Basic Test.                                      Failed #"
  end
  print "###########################################################"
  print ""
end

define M_CHECK_RET_ERR ERR0 ERR1 ERR2 ERR3 ERR4 ERR5 ERR6 ERR7 ERR8 ERR9 ERR10 ERR11
  print ""
  print "###########################################################"
  if ERR0==FALSE_
    print "# Expected error : ST_ERROR_ALREADY_INITIALIZED.   Ok     #"
  end
  else
    print "# Expected error : ST_ERROR_ALREADY_INITIALIZED.   Failed #"
  end
  if ERR1==FALSE_
    print "# Expected error : ST_ERROR_BAD_PARAMETER.         Ok     #"
  end
  else
    print "# Expected error : ST_ERROR_BAD_PARAMETER.         Failed #"
  end
  if ERR2==FALSE_
    print "# Expected error : ST_ERROR_NO_MEMORY.             Ok     #"
  end
  else
    print "# Expected error : ST_ERROR_NO_MEMORY.             Failed #"
  end
  if ERR3==FALSE_
    print "# Expected error : STVOUT_ERROR_DENC_ACCESS.       Ok     #"
  end
  else
    print "# Expected error : STVOUT_ERROR_DENC_ACCESS.       Failed #"
  end
  if ERR4==FALSE_
    print "# Expected error : ST_ERROR_INVALID_HANDLE.        Ok     #"
  end
  else
    print "# Expected error : ST_ERROR_INVALID_HANDLE.        Failed #"
  end
  if ERR5==FALSE_
    print "# Expected error : ST_ERROR_NO_FREE_HANDLES.       Ok     #"
  end
  else
    print "# Expected error : ST_ERROR_NO_FREE_HANDLES.       Failed #"
  end
  if ERR6==FALSE_
    print "# Expected error : ST_ERROR_OPEN_HANDLE.           Ok     #"
  end
  else
    print "# Expected error : ST_ERROR_OPEN_HANDLE.           Failed #"
  end
  if ERR7==FALSE_
    print "# Expected error : ST_ERROR_UNKNOWN_DEVICE.        Ok     #"
  end
  else
    print "# Expected error : ST_ERROR_UNKNOWN_DEVICE.        Failed #"
  end
  if ERR8==FALSE_
    print "# Expected error : STVOUT_ERROR_VOUT_NOT_AVAILABLE Ok     #"
  end
  else
    print "# Expected error : STVOUT_ERROR_VOUT_NOT_AVAILABLE Failed #"
  end
  if ERR9==FALSE_
    print "# Expected error : STVOUT_ERROR_VOUT_NOT_ENABLE.   Ok     #"
  end
  else
    print "# Expected error : STVOUT_ERROR_VOUT_NOT_ENABLE.   Failed #"
  end
  if ERR10==FALSE_
    print "# Expected error : STVOUT_ERROR_VOUT_ENABLE.       Ok     #"
  end
  else
    print "# Expected error : STVOUT_ERROR_VOUT_ENABLE.       Failed #"
  end
  if ERR11==FALSE_
    print "# Expected error : STVOUT_ERROR_VOUT_INCOMPATIBLE. Ok     #"
  end
  else
    print "# Expected error : STVOUT_ERROR_VOUT_INCOMPATIBLE. Failed #"
  end
  print "###########################################################"
  print ""
end

define M_CHECK_TEST1_ERR ERT00 ERT01 ERT02 ERT03 ERT04 ERT05 ERT06 ERT07 ERT08 ERT09 ERT10 ERT11
  print ""
  print "###########################################################"
  if TESTRGB==FALSE_
    print "# test DAC RGB value.                              NA     #"
  end
  else
    if ERT00==FALSE_
      print "# test DAC RGB value.                              Ok     #"
    end
    else
      print "# test DAC RGB value.                              Failed #"
    end
  end
  if TESTYUV==FALSE_
    print "# test DAC YUV value.                              NA     #"
  end
  else
    if ERT01==FALSE_
      print "# test DAC YUV value.                              Ok     #"
    end
    else
      print "# test DAC YUV value.                              Failed #"
    end
  end
  if TESTYC==FALSE_
    print "# test DAC YC value.                               NA     #"
  end
  else
    if ERT02==FALSE_
      print "# test DAC YC value.                               Ok     #"
    end
    else
      print "# test DAC YC value.                               Failed #"
    end
  end
  if TESTCVBS==FALSE_
    print "# test DAC CVBS value.                             NA     #"
  end
  else
    if ERT03==FALSE_
      print "# test DAC CVBS value.                             Ok     #"
    end
    else
      print "# test DAC CVBS value.                             Failed #"
    end
  end
  if TESTDAC==FALSE_
    print "# test DAC on TV.                                  NA     #"
  end
  else
    if ERT04==FALSE_
      print "# test DAC on TV.                                  Ok     #"
    end
    else
      print "# test DAC on TV.                                  Failed #"
    end
  end
  if TESTBRI==FALSE_
    print "# test BRIGHTNESS.                                 NA     #"
  end
  else
    if ERT05==FALSE_
      print "# test BRIGHTNESS.                                 Ok     #"
    end
    else
      print "# test BRIGHTNESS.                                 Failed #"
    end
  end
  if TESTCON==FALSE_
    print "# test CONTRAST.                                   NA     #"
  end
  else
    if ERT06==FALSE_
      print "# test CONTRAST.                                   Ok     #"
    end
    else
      print "# test CONTRAST.                                   Failed #"
    end
  end
  if TESTSAT==FALSE_
    print "# test SATURATION.                                 NA     #"
  end
  else
    if ERT07==FALSE_
      print "# test SATURATION.                                 Ok     #"
    end
    else
      print "# test SATURATION.                                 Failed #"
    end
  end
  if TESTBCS==FALSE_
    print "# test BCS on TV.                                  NA     #"
  end
  else
    if ERT08==FALSE_
      print "# test BCS on TV.                                  Ok     #"
    end
    else
      print "# test BCS on TV.                                  Failed #"
    end
  end
  if ERT09==FALSE_
    print "# test DAC inverted output.                        Ok     #"
  end
  else
    print "# test DAC inverted output.                        Failed #"
  end
  if TESTCHR==FALSE_
    print "# test CHROMA.                                     NA     #"
  end
  else
    if ERT10==FALSE_
      print "# test CHROMA.                                     Ok     #"
    end
    else
      print "# test CHROMA.                                     Failed #"
    end
  end
  if TESTLUM==FALSE_
    print "# test LUMA.                                       NA     #"
  end
  else
    if ERT11==FALSE_
      print "# test LUMA.                                       Ok     #"
    end
    else
      print "# test LUMA.                                       Failed #"
    end
  end
  print "###########################################################"
  print ""
end

define M_CHECK_TEST2_ERR ERT10 ERT11 ERT12 ERT13 ERT14 ERT15 ERT16
  print ""
  print "###########################################################"
  if TESTSVM==FALSE_
    print "# test SVM.                                        NA     #"
  end
  else
    if ERT10==FALSE_
      print "# test SVM.                                        Ok     #"
    end
    else
      print "# test SVM.                                        Failed #"
    end
  end
  if TEST444_24==FALSE_
    print "# test DIGITAL YcbCr444 24 bits Components         NA     #"
  end
  else
    if ERT11==FALSE_
      print "# test DIGITAL YcbCr444 24 bits Components.        Ok     #"
    end
    else
      print "# test DIGITAL YcbCr444 24 bits Components.        Failed #"
    end
  end
  if TEST422_16==FALSE_
    print "# test DIGITAL YcbCr422 16 bits Components         NA     #"
  end
  else
    if ERT12==FALSE_
      print "# test DIGITAL YcbCr422 16 bits Components.        Ok     #"
    end
    else
      print "# test DIGITAL YcbCr422 16 bits Components.        Failed #"
    end
  end
  if TEST422_8==FALSE_
    print "# test DIGITAL YcbCr422 8  bits Components         NA     #"
  end
  else
    if ERT13==FALSE_
      print "# test DIGITAL YcbCr422 8  bits Components.        Ok     #"
    end
    else
      print "# test DIGITAL YcbCr422 8  bits Components.        Failed #"
    end
  end
  if TEST888_24==FALSE_
    print "# test DIGITAL rgb888   8  bits Components         NA     #"
  end
  else
    if ERT14==FALSE_
      print "# test DIGITAL rgb888   8  bits Components.        Ok     #"
    end
    else
      print "# test DIGITAL rgb888   8  bits Components.        Failed #"
    end
  end
  if TESTHDRGB==FALSE_
    print "# test ANALOG  HD RGB.                             NA     #"
  end
  else
    if ERT15==FALSE_
      print "# test ANALOG  HD RGB.                             Ok     #"
    end
    else
      print "# test ANALOG  HD RGB.                             Failed #"
    end
  end
  if TESTHDYUV==FALSE_
    print "# test ANALOG  HD YUV.                             NA     #"
  end
  else
    if ERT16==FALSE_
      print "# test ANALOG  HD YUV.                             Ok     #"
    end
    else
      print "# test ANALOG  HD YUV.                             Failed #"
    end
  end
  print "###########################################################"
  print ""
end

define M_CHECK_MUL_ERR ERRM0
  print ""
  print "###########################################################"
  if ERRM0==FALSE_
    print "# test Multi Instances                             Ok     #"
  end
  else
    print "# test Multi Instances                             Failed #"
  end
  print "###########################################################"
  print ""
end

define M_CHECK_TEST3_ERR ERT00 ERT01 ERT02 ERT03 ERT04 ERT05 ERT06 ERT07 ERT08 ERT09 ERT10 ERT11 ; For STi5528 & STi5100
  print ""
  print "###########################################################"
  if TESTRGB_DAC123==FALSE_
    print "# test DAC123 RGB value.                           NA     #"
  end
  else
    if ERT00==FALSE_
      print "# test DAC123 RGB value.                           Ok     #"
    end
    else
      print "# test DAC123 RGB value.                           Failed #"
    end
  end
  if TESTRGB_DAC456==FALSE_
    print "# test DAC456 RGB value.                           NA     #"
  end
  else
    if ERT01==FALSE_
      print "# test DAC456 RGB value.                           Ok     #"
    end
    else
      print "# test DAC456 RGB value.                           Failed #"
    end
  end
  if TESTYUV_DAC123MAIN==FALSE_
    print "# test DAC123 MAIN YUV value.                      NA     #"
  end
  else
    if ERT02==FALSE_
      print "# test DAC123 MAIN YUV value.                      Ok     #"
    end
    else
      print "# test DAC123 MAIN YUV value.                      Failed #"
    end
  end
  if TESTYUV_DAC456AUX==FALSE_
    print "# test DAC456 AUX YUV value.                       NA     #"
  end
  else
    if ERT03==FALSE_
      print "# test DAC456 AUX YUV value.                       Ok     #"
    end
    else
      print "# test DAC456 AUX YUV value.                       Failed #"
    end
  end
  if TESTYC_DAC12==FALSE_
    print "# test DAC12 YC value.                             NA     #"
  end
  else
    if ERT04==FALSE_
      print "# test DAC12 YC value.                             Ok     #"
    end
    else
      print "# test DAC12 YC value.                             Failed #"
    end
  end
  if TESTYC_DAC45==FALSE_
    print "# test DAC45 YC value.                             NA     #"
  end
  else
    if ERT05==FALSE_
      print "# test DAC45 YC value.                             Ok     #"
    end
    else
      print "# test DAC45 YC value.                             Failed #"
    end
  end
  if TESTCVBS_DAC1MAIN==FALSE_
    print "# test DAC1 MAIN CVBS value.                       NA     #"
  end
  else
    if ERT06==FALSE_
      print "# test DAC1 MAIN CVBS value.                       Ok     #"
    end
    else
      print "# test DAC1 MAIN CVBS value.                       Failed #"
    end
  end
  if TESTCVBS_DAC5MAIN==FALSE_
    print "# test DAC5 MAIN CVBS value.                       NA     #"
  end
  else
    if ERT07==FALSE_
      print "# test DAC5 MAIN CVBS value.                       Ok     #"
    end
    else
      print "# test DAC5 MAIN CVBS value.                       Failed #"
    end
  end
  if TESTCVBS_DAC2AUX==FALSE_
    print "# test DAC2 AUX CVBS value.                        NA     #"
  end
  else
    if ERT08==FALSE_
      print "# test DAC2 AUX CVBS value.                        Ok     #"
    end
    else
      print "# test DAC2 AUX CVBS value.                        Failed #"
    end
  end
  if TESTCVBS_DAC4AUX==FALSE_
    print "# test DAC4 AUX CVBS value.                        NA     #"
  end
  else
    if ERT09==FALSE_
      print "# test DAC4 AUX CVBS value.                        Ok     #"
    end
    else
      print "# test DAC4 AUX CVBS value.                        Failed #"
    end
  end
 if TESTCVBS_DAC3==FALSE_
    print "# test DAC3 CVBS value.                            NA     #"
  end
  else
    if ERT10==FALSE_
      print "# test DAC3 CVBS value.                            Ok     #"
    end
    else
      print "# test DAC3 CVBS value.                            Failed #"
    end
  end
 if TESTCVBS_DAC6==FALSE_
    print "# test DAC6 CVBS value.                            NA     #"
  end
  else
    if ERT11==FALSE_
      print "# test DAC6 CVBS value.                            Ok     #"
    end
    else
      print "# test DAC6 CVBS value.                            Failed #"
    end
  end
  print "###########################################################"
  print ""
end
define M_CHECK_TEST4_ERR ERT00 ERT01 ERT02 ERT03 ; For STi4629
  print ""
  print "###########################################################"
  if TESTRGB1_DAC123==FALSE_
    print "# test DAC123 RGB value.                           NA     #"
  end
  else
    if ERT00==FALSE_
      print "# test DAC123 RGB value.                           Ok     #"
    end
    else
      print "# test DAC123 RGB value.                           Failed #"
    end
  end
 if TESTYUV1_DAC123==FALSE_
    print "# test DAC123 YUV value.                           NA     #"
 end
 else
    if ERT01==FALSE_
      print "# test DAC123 YUV value.                           Ok     #"
    end
    else
      print "# test DAC123 YUV value.                           Failed #"
    end
  end
  if TESTYC1_DAC12==FALSE_
    print "# test DAC12 YC value.                             NA     #"
  end
  else
    if ERT02==FALSE_
      print "# test DAC12 YC value.                             Ok     #"
    end
    else
      print "# test DAC12 YC value.                             Failed #"
    end
  end
  if TESTCVBS1_DAC3==FALSE_
  print "# test DAC3 CVBS value.                            NA     #"
  end
  else
    if ERT03==FALSE_
      print "# test DAC3 CVBS value.                            Ok     #"
    end
    else
      print "# test DAC3 CVBS value.                            Failed #"
    end
  end
   print "###########################################################"
   print ""
end
define M_CHECK_TEST5_ERR ERT00 ERT01 ERT02 ERT03 ERT04 ERT05  ;For STi5516/17
  print ""
  print "###########################################################"
  if TESTRGB_DAC456==FALSE_
    print "# test DAC456 RGB value.                           NA     #"
  end
  else
    if ERT00==FALSE_
      print "# test DAC456 RGB value.                           Ok     #"
    end
    else
      print "# test DAC456 RGB value.                           Failed #"
    end
  end
 if TESTYUV_DAC456==FALSE_
    print "# test DAC456 YUV value.                           NA     #"
 end
 else
    if ERT01==FALSE_
      print "# test DAC456 YUV value.                           Ok     #"
    end
    else
      print "# test DAC456 YUV value.                           Failed #"
    end
  end
  if TESTYC_DAC12==FALSE_
      print "# test DAC12 YC value.                             NA     #"
  end
  else
    if ERT02==FALSE_
      print "# test DAC12 YC value.                             Ok     #"
    end
    else
      print "# test DAC12 YC value.                             Failed #"
    end
  end
  if TESTYC_DAC45==FALSE_
      print "# test DAC45 YC value.                             NA     #"
  end
  else
    if ERT03==FALSE_
      print "# test DAC45 YC value.                             Ok     #"
    end
    else
      print "# test DAC45 YC value.                             Failed #"
    end
  end
  if TESTCVBS_DAC3==FALSE_
  print "# test DAC3 CVBS value.                            NA     #"
  end
  else
    if ERT04==FALSE_
      print "# test DAC3 CVBS value.                            Ok     #"
    end
    else
      print "# test DAC3 CVBS value.                            Failed #"
    end
  end
  if TESTCVBS_DAC6==FALSE_
  print "# test DAC6 CVBS value.                            NA     #"
  end
  else
    if ERT05==FALSE_
      print "# test DAC6 CVBS value.                            Ok     #"
    end
    else
      print "# test DAC6 CVBS value.                            Failed #"
    end
  end
  print "###########################################################"
  print ""
end

define M_CHECK_TEST6_ERR ERT00 ERT01 ERT02 ;For STi7710
  print ""
  print "###########################################################"
  if TESTYC_DAC12==FALSE_
      print "# test DAC12 YC value.                         NA     #"
  end
  else
    if ERT00==FALSE_
      print "# test DAC12 YC value.                             Ok     #"
    end
    else
      print "# test DAC12 YC value.                             Failed #"
    end
  end
  if TESTCVBS_DAC2==FALSE_
    print "# test DAC2 CVBS value.                          NA     #"
  end
  else
    if ERT01==FALSE_
      print "# test DAC2 CVBS value.                            Ok     #"
    end
    else
      print "# test DAC2 CVBS value.                            Failed #"
    end
  end
  if TESTCVBS_DAC3==FALSE_
  print "# test DAC3 CVBS value.                            NA     #"
  end
  else
    if ERT02==FALSE_
      print "# test DAC3 CVBS value.                            Ok     #"
    end
    else
      print "# test DAC3 CVBS value.                            Failed #"
    end
  end
  print "###########################################################"
  print ""
end

define M_CHECK_TEST7_ERR ERT00 ERT01
  print ""
  print "###########################################################"
  if TESTRGB==FALSE_
    print "# test HD RGB.                                   NA     #"
  end
  else
    if ERT00==FALSE_
      print "# test HD RGB.                                     Ok     #"
    end
    else
      print "# test HD RGB.                                     Failed #"
    end
  end
  if TESTYUV==FALSE_
    print "# test HD YUV.                                   NA     #"
  end
  else
    if ERT01==FALSE_
      print "# test HD YUV.                                     Ok     #"
    end
    else
      print "# test HD YUV.                                     Failed #"
    end
  end
  print "###########################################################"
  print ""
end

define M_CHECK_TEST8_ERR ERT00 ERT01 ERT02 ERT03
  print ""
  print "###########################################################"
  if TESTBASIC==FALSE_
    print "# HDMI API BASIC TEST.                           NA     #"
  end
  else
    if ERT00==FALSE_
      print "# HDMI API BASIC TEST.                             Ok     #"
    end
    else
      print "# HDMI API BASIC TEST.                             Failed #"
    end
  end
  if TESTRET==FALSE_
    print "# HDMI RETURNS TEST.                             NA     #"
  end
  else
    if ERT01==FALSE_
      print "# HDMI RETURNS TEST.                               Ok     #"
    end
    else
      print "# HDMI RETURNS TEST.                               Failed #"
    end
  end
  if TESTMACHINE==FALSE_
    print "# HDMI STATE MACHINE TEST                        NA     #"
  end
  else
    if ERT02==FALSE_
      print "# HDMI STATE MACHINE TEST.                         Ok     #"
    end
    else
      print "# HDMI STATE MACHINE TEST.                         Failed #"
    end
  end
  if TESTEDID==FALSE_
    print "# HDMI EDID RETRIEVAL TEST                        NA     #"
  end
  else
    if ERT03==FALSE_
      print "# HDMI EDID RETRIEVAL TEST.                        Ok     #"
    end
    else
      print "# HDMI EDID RETRIEVAL TEST.                        Failed #"
    end
  end
  print "###########################################################"
  print ""
end
define M_CHECK_RET9_ERR ERR0 ERR1 ERR2 ERR3 ERR4 ERR5 ERR6
  print ""
  print "###########################################################"
  if ERR0==FALSE_
    print "# Expected error : ST_ERROR_ALREADY_INITIALIZED.   Ok     #"
  end
  else
    print "# Expected error : ST_ERROR_ALREADY_INITIALIZED.   Failed #"
  end
  if ERR1==FALSE_
    print "# Expected error : ST_ERROR_INVALID_HANDLE.        Ok     #"
  end
  else
    print "# Expected error : ST_ERROR_INVALID_HANDLE.        Failed #"
  end
  if ERR2==FALSE_
    print "# Expected error : ST_ERROR_NO_FREE_HANDLES.       Ok     #"
  end
  else
    print "# Expected error : ST_ERROR_NO_FREE_HANDLES.       Failed #"
  end
  if ERR3==FALSE_
    print "# Expected error : ST_ERROR_OPEN_HANDLE.           Ok     #"
  end
  else
    print "# Expected error : ST_ERROR_OPEN_HANDLE.           Failed #"
  end
  if ERR4==FALSE_
    print "# Expected error : STVOUT_ERROR_VOUT_NOT_ENABLE.   Ok     #"
  end
  else
    print "# Expected error : STVOUT_ERROR_VOUT_NOT_ENABLE.   Failed #"
  end
  if ERR5==FALSE_
    print "# Expected error : STVOUT_ERROR_VOUT_ENABLE.       Ok     #"
  end
  else
    print "# Expected error : STVOUT_ERROR_VOUT_ENABLE.       Failed #"
  end
  if ERR6==FALSE_
    print "# Expected error : STVOUT_ERROR_FEAT_NOT_SUPPORTED Ok     #"
  end
  else
    print "# Expected error : STVOUT_ERROR_FEAT_NOT_SUPPORTED. Failed #"
  end
  print "###########################################################"
  print ""
end
define M_CHECK_TEST10_ERR ERT00 ERT01 ERT02 ERT03 ERT04 ERT05 ; For STi5105
  print ""
  print "###########################################################"
  if TESTRGB_DAC123==FALSE_
    print "# test DAC123 RGB value.                           NA     #"
  end
  else
    if ERT00==FALSE_
      print "# test DAC123 RGB value.                           Ok     #"
    end
    else
      print "# test DAC123 RGB value.                           Failed #"
    end
  end
  if TESTYUV_DAC123MAIN==FALSE_
    print "# test DAC123 MAIN YUV value.                      NA     #"
  end
  else
    if ERT01==FALSE_
      print "# test DAC123 MAIN YUV value.                      Ok     #"
    end
    else
      print "# test DAC123 MAIN YUV value.                      Failed #"
    end
  end
  if TESTYC_DAC12==FALSE_
    print "# test DAC12 YC value.                             NA     #"
  end
  else
    if ERT02==FALSE_
      print "# test DAC12 YC value.                             Ok     #"
    end
    else
      print "# test DAC12 YC value.                             Failed #"
    end
  end
  if TESTCVBS_DAC1MAIN==FALSE_
    print "# test DAC1 MAIN CVBS value.                       NA     #"
  end
  else
    if ERT03==FALSE_
      print "# test DAC1 MAIN CVBS value.                       Ok     #"
    end
    else
      print "# test DAC1 MAIN CVBS value.                       Failed #"
    end
  end
  if TESTCVBS_DAC3==FALSE_
    print "# test DAC3 CVBS value.                            NA     #"
  end
  else
    if ERT04==FALSE_
      print "# test DAC3 CVBS value.                            Ok     #"
    end
    else
      print "# test DAC3 CVBS value.                            Failed #"
    end
  end
 if TESTCVBS_DAC6==FALSE_
    print "# test DAC6 CVBS value.                            NA     #"
  end
  else
    if ERT05==FALSE_
      print "# test DAC6 CVBS value.                            Ok     #"
    end
    else
      print "# test DAC6 CVBS value.                            Failed #"
    end
  end
  print "###########################################################"
  print ""
end




