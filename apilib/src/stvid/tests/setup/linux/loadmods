#!/bin/sh

# File       : loadmods
# Function   : insert and start modules for video test application
# Assumption : input file MyFirmware.txt exists (generated by setup.bash)
# ***********************************************************************

FILE=MyFirmware.txt
if !(test -f $FILE)
then
	echo "$FILE does not exists, cannot load modules"
    echo "May be you didn't run the script setup.bash"
	echo "Exiting ..."
	exit
fi

# $DVD_BACKEND is undefined in the current telnet session : retrieve its value...
CHIP=`grep "VideoLX" $FILE`
# as the chip is after "VideoLX_", extract the 4 characters in field after "_"
CHIP=`echo $CHIP | cut -d "_" -f2 | cut -c1-4`
echo "Requested chip = $CHIP"

MOD_DIR=exports/lib/modules
STAPIGAT_DIR=exports/share/lib/modules
LXLOAD_DIR=exports/lib/modules
MME_DIR=exports/lib/modules
COMPANION_DIR=scripts/vid
SCRIPT_DIR=scripts/utils

echo
echo "-- UTILITIES modules --"
echo "Loading stos module..."
insmod $MOD_DIR/stos_core.ko
echo "Loading common modules..."
insmod $MOD_DIR/stcommon_core.ko
echo "Loading stevt modules ..."
insmod $MOD_DIR/stevt_core.ko
insmod $MOD_DIR/stevt_ioctl.ko
echo "Loading avmem module..."
case $CHIP in
    "7200" )
    STAVMEM_ARG=" MAX_BLOCKS=100 PART_0=0xAAA00000:0x055F0000:\"LMI_SYS\" PART_1=0xB8000000:0x03FF0000:\"LMI_VID\""
    ;;

    * )
    STAVMEM_ARG="MAX_BLOCKS=150 PART_0=0xA7400000:0x00C00000:\"LMI_SYS\" PART_1=0xB0000000:0x04000000:\"LMI_VID\""
    ;;
esac
insmod $MOD_DIR/stavmem_core.ko $STAVMEM_ARG

echo "Loading stapigat module..."
insmod $STAPIGAT_DIR/stapigat.ko
echo "Loading stpio modules..."
insmod $MOD_DIR/stpio_core.ko
insmod $MOD_DIR/stpio_ioctl.ko
echo "Loading sti2c modules ..."
insmod $MOD_DIR/sti2c_core.ko
insmod $MOD_DIR/sti2c_ioctl.ko

echo
echo "-- PTI modules --"
echo "Loading merge modules..."
case $CHIP in
    "7200" )
    # Nothing to load
    ;;

    * )
$SCRIPT_DIR/stmerge_load.sh
    ;;
esac
echo "Loading pti modules..."
$SCRIPT_DIR/stpti4_load.sh

echo
echo "-- CLKRV modules --"
echo "Loading clkrv modules ..."
$SCRIPT_DIR/stclkrv_load.sh


echo
echo "-- MME modules --"
case $CHIP in
    "7200" )
    use_stslave=0
    ;;

    * )
use_stslave=1
    ;;
esac

COMPANIONS=`grep "Audio" $FILE`
COMPANION_IDX=1
# load audio firmwares whose names are in $FILE
for COMPANION in $COMPANIONS; do
COMPANION_ADDR=0x`echo $COMPANION | cut -d "x" -f 2 | cut -d "." -f1`
if test "$use_stslave" == "0"; then
        echo "loading audio main companion $COMPANION at address $COMPANION_ADDR..."
        case $CHIP in
            "7200" )
            LXLOAD_ARG="LxToInitialize=$COMPANION_IDX"
            COMPANION_IDX=`expr $COMPANION_IDX + 2`
            ;;

            * )
            LXLOAD_ARG="StartAddress=$COMPANION_ADDR"
            ;;
        esac
        insmod $LXLOAD_DIR/mlxload.ko $LXLOAD_ARG
        major=`cat /proc/devices | awk "\\$2==\"lxload\" {print \\$1}"`
        rm -f /dev/stapi/lxload
        mknod /dev/stapi/lxload c $major 0
        cat $COMPANION > /dev/stapi/lxload
        rmmod mlxload
    else
        echo "Loading audio companion with stslave $COMPANION at address $COMPANION_ADDR..."
 stslave -t stb7100.1 -Z
 cat $COMPANION > /dev/st231-1
 stslave -t stb7100.1 -X $COMPANION_ADDR
    fi
done

COMPANIONS=`grep "Video" $FILE`
COMPANION_ADDR=0x04000000
COMPANION_IDX=2
# load video firmwares whose names are in $FILE
for COMPANION in $COMPANIONS; do
    if test "$use_stslave" == "0"; then
        echo "loading video main companion $COMPANION at address $COMPANION_ADDR..."
        case $CHIP in
            "7200" )
            LXLOAD_ARG="LxToInitialize=$COMPANION_IDX"
            COMPANION_IDX=`expr $COMPANION_IDX + 2`
            ;;

            * )
            LXLOAD_ARG="StartAddress=$COMPANION_ADDR"
            ;;
        esac
        insmod $LXLOAD_DIR/mlxload.ko $LXLOAD_ARG
        major=`cat /proc/devices | awk "\\$2==\"lxload\" {print \\$1}"`
        rm -f /dev/stapi/lxload
        mknod /dev/stapi/lxload c $major 0
        cat $COMPANION > /dev/stapi/lxload
        rmmod mlxload
    else
        echo "Loading video companion with stslave $COMPANION at address $COMPANION_ADDR..."
 stslave -t stb7100.0 -Z
 cat $COMPANION > /dev/st231-0
 stslave -t stb7100.0 -X $COMPANION_ADDR
    fi
done

echo "inserting multicom modules ..."
insmod $MME_DIR/embxshell.ko
insmod $MME_DIR/embxloopback.ko

case $CHIP in
    "7200" )
    EMBX_MAILBOX_ARG="mailbox0=0xFD800000:20:set2 mailbox1=0xFD801000:22:set2 mailbox2=0xFD802000:21:set2 mailbox3=0xFD803000:23:set2"
    EMBX_SHM_ARG="mailbox1=TransportVideo1:0:0x5:0x60000000:0:16:16:0:128:0xAAA00000:0x20000000 mailbox3=TransportVideo2:0:0x11:0x60000000:0:16:16:0:128:0xAAA00000:0x20000000"
    MME_HOST_ARG="transport1=TransportVideo1 transport3=TransportVideo2"
    ;;

    * )
    EMBX_MAILBOX_ARG="mailbox0=0xB9211000:136:set2 mailbox1=0xB9212000:137:set2"
    EMBX_SHM_ARG="mailbox0=ups:0:7:0x60000000:0:16:16:0:2048:0xA4000000:0x20000000"
    MME_HOST_ARG="transport0=ups"
    ;;
esac
insmod $MME_DIR/embxmailbox.ko $EMBX_MAILBOX_ARG
insmod $MME_DIR/embxshm.ko     $EMBX_SHM_ARG
insmod $MME_DIR/mme_host.ko    $MME_HOST_ARG

echo
echo "-- OUTPUTSTAGE modules --"
echo "Loading denc modules ..."
insmod $MOD_DIR/stdenc_core.ko
insmod $MOD_DIR/stdenc_ioctl.ko
echo "Loading vtg modules ..."
insmod $MOD_DIR/stvtg_core.ko
insmod $MOD_DIR/stvtg_ioctl.ko

echo "Loading vout modules ..."
insmod $MOD_DIR/stvout_core.ko
insmod $MOD_DIR/stvout_ioctl.ko
echo "Loading layer modules ..."
insmod $MOD_DIR/stlayer_core.ko
insmod $MOD_DIR/stlayer_ioctl.ko
echo "Loading vmix modules ..."
insmod $MOD_DIR/stvmix_core.ko
insmod $MOD_DIR/stvmix_ioctl.ko

echo
echo "-- FDMA module --"
echo "Loading fdma module..."
#insmod $MOD_DIR/fdma.ko
insmod $MOD_DIR/stfdma_core.ko

case $CHIP in
    "7200" )
    # Nothing to do
    ;;

    * )
echo
echo "-- STAUDLX modules --"
echo "Loading staudlx module..."
$SCRIPT_DIR/staudlx_load.sh
    ;;
esac

echo
echo "-- VIDEO modules --"
echo "Loading vid modules ..."
insmod $MOD_DIR/stvid_core.ko
insmod $MOD_DIR/stvid_ioctl.ko

echo
echo "-----------------"
for i in stvid_ioctl stlayer_ioctl stapigat stevt_ioctl stvout_ioctl stvtg_ioctl stdenc_ioctl stvmix_ioctl stpio_ioctl sti2c_ioctl
do
  major=`cat /proc/devices | awk "\\$2==\"$i\" {print \\$1}"`

  echo "Creating device entry: /dev/stapi/$i     major:$major"

  rm -f /dev/stapi/$i
  mknod /dev/stapi/$i c $major 0
done





echo
echo "-----------------"
lsmod

