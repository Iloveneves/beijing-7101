
/*****************************************************************************

File name   : gamma_treg.h

Description : Gamma register description for test

COPYRIGHT (C) ST-Microelectronics 1999.

Date                    Modification                    Name
----                    ------------                    ----
02-Sep-99               Created                         FC
17-Sep-99                       Changes for Gamma v1.2                  FC
22-Dec-99                       Update names + Gamma v1.3               MH
20-Mar-99                   Gamma v1.5                                      MH
*****************************************************************************/

#ifndef __HALGC_GAMMA_TREG_H
#define __HALGC_GAMMA_TREG_H

/* Includes --------------------------------------------------------------- */

#include "dumpreg.h"
#include "gamma_reg.h"

#ifdef __cplusplus
extern  "C"
{
#endif

#ifdef GAMMA_7015
	#define GAMMA_COMPOSITOR_BASE_ADDRESS (STI7015_BASE_ADDRESS + ST7015_GAMMA_OFFSET)
	#define GAMMA_BLITTER_BASE_ADDRESS    (STI7015_BASE_ADDRESS + ST7015_GAMMA_OFFSET)
#endif
#ifdef GAMMA_7020
    #define GAMMA_COMPOSITOR_BASE_ADDRESS (STI7020_BASE_ADDRESS + ST7020_GAMMA_OFFSET)
    #define GAMMA_BLITTER_BASE_ADDRESS    (STI7020_BASE_ADDRESS + ST7020_GAMMA_OFFSET)
#endif
#if (defined GAMMA_PANGEA || defined GAMMA_ATLAS)
	#define GAMMA_COMPOSITOR_BASE_ADDRESS GAMMA_BASE_ADDRESS
	#define GAMMA_BLITTER_BASE_ADDRESS    GAMMA_BASE_ADDRESS
#endif
#ifdef GAMMA_ST40GX1
	#define GAMMA_COMPOSITOR_BASE_ADDRESS COMPOSITOR_BASE
	#define GAMMA_BLITTER_BASE_ADDRESS    BLITTER_BASE
#endif
#ifdef GAMMA_5528
    #ifndef ST5528_COMPOSITOR_BASE_ADDRESS
    #define ST5528_COMPOSITOR_BASE_ADDRESS     0x19010000
    #endif

    #ifndef ST5528_BLITTER_BASE_ADDRESS
    #define ST5528_BLITTER_BASE_ADDRESS        0x19012000
    #endif

    #ifndef ST5528_DISP0_BASE_ADDRESS
    #define ST5528_DISP0_BASE_ADDRESS  (0x19008000)
    #endif

    #ifndef ST5528_DISP1_BASE_ADDRESS
    #define ST5528_DISP1_BASE_ADDRESS  (0x19009000)
    #endif

    #define GAMMA_COMPOSITOR_BASE_ADDRESS   ST5528_COMPOSITOR_BASE_ADDRESS
    #define GAMMA_BLITTER_BASE_ADDRESS      ST5528_BLITTER_BASE_ADDRESS
#endif
#if defined(GAMMA_7710)
	/* Do not display all filter coefficients... */
	#define GAMMA_7710_NO_DISP_COEFF

	#define GAMMA_COMPOSITOR_BASE_ADDRESS 	COMPOSITOR_BASE_ADDRESS
	#define GAMMA_BLITTER_BASE_ADDRESS   	BLITTER_BASE_ADDRESS
	#define DISPLAY_BASE_ADDRESS    		DISP0_BASE
	#define LMU_BASE_ADDRESS				0x38204000
#endif
#if defined(GAMMA_7100)
	/* Do not display all filter coefficients... */
	#define GAMMA_7710_NO_DISP_COEFF

	#define GAMMA_COMPOSITOR_BASE_ADDRESS 	COMPOSITOR_BASE_ADDRESS
	#define GAMMA_BLITTER_BASE_ADDRESS   	BLITTER_BASE_ADDRESS
	#define DISPLAY_BASE_ADDRESS    		DISP0_BASE
	#define LMU_BASE_ADDRESS				0xB9004000
#endif
#if defined(GAMMA_7109)
	/* Do not display all filter coefficients... */
	#define GAMMA_7109_NO_DISP_COEFF

	/* Do not display address stack levels*/
	/*#define GAMMA_7109_NO_STACK_LEVELS*/

	#define GAMMA_COMPOSITOR_BASE_ADDRESS 	COMPOSITOR_BASE_ADDRESS
	#define GAMMA_BLITTER_BASE_ADDRESS   	BLITTER_BASE_ADDRESS
	#define DISPLAY_BASE_ADDRESS    		DISP0_BASE
	#define DEI_BASE_ADDRESS				0xB9002000
#endif


#define CUR_BASE_ADDRESS	(GAMMA_COMPOSITOR_BASE_ADDRESS + CUR_OFFSET_ADDRESS)
#define VI1_BASE_ADDRESS	(GAMMA_COMPOSITOR_BASE_ADDRESS + VI1_OFFSET_ADDRESS)
#define VI2_BASE_ADDRESS	(GAMMA_COMPOSITOR_BASE_ADDRESS + VI2_OFFSET_ADDRESS)
#define GFX1_BASE_ADDRESS	(GAMMA_COMPOSITOR_BASE_ADDRESS + GFX1_OFFSET_ADDRESS)
#define GFX2_BASE_ADDRESS	(GAMMA_COMPOSITOR_BASE_ADDRESS + GFX2_OFFSET_ADDRESS)
#define ALP_BASE_ADDRESS	(GAMMA_COMPOSITOR_BASE_ADDRESS + ALP_OFFSET_ADDRESS)
#define GDP1_BASE_ADDRESS	(GAMMA_COMPOSITOR_BASE_ADDRESS + GDP1_OFFSET_ADDRESS)
#define GDP2_BASE_ADDRESS	(GAMMA_COMPOSITOR_BASE_ADDRESS + GDP2_OFFSET_ADDRESS)
#define GDP3_BASE_ADDRESS	(GAMMA_COMPOSITOR_BASE_ADDRESS + GDP3_OFFSET_ADDRESS)
#define GDP4_BASE_ADDRESS	(GAMMA_COMPOSITOR_BASE_ADDRESS + GDP4_OFFSET_ADDRESS)
#define GDP5_BASE_ADDRESS	(GAMMA_COMPOSITOR_BASE_ADDRESS + GDP5_OFFSET_ADDRESS)
#define BLT_BASE_ADDRESS	(GAMMA_BLITTER_BASE_ADDRESS    + BLT_OFFSET_ADDRESS)
#define BFC_BASE_ADDRESS	(GAMMA_BLITTER_BASE_ADDRESS    + BFC_OFFSET_ADDRESS)
#define CAP_BASE_ADDRESS	(GAMMA_COMPOSITOR_BASE_ADDRESS + CAP_OFFSET_ADDRESS)
#define MX1_BASE_ADDRESS	(GAMMA_COMPOSITOR_BASE_ADDRESS + MX1_OFFSET_ADDRESS)
#define MX2_BASE_ADDRESS	(GAMMA_COMPOSITOR_BASE_ADDRESS + MX2_OFFSET_ADDRESS)
#define WP_BASE_ADDRESS		(GAMMA_COMPOSITOR_BASE_ADDRESS + WP_OFFSET_ADDRESS)

/* Exported Types --------------------------------------------------------- */
/* Exported Constants ----------------------------------------------------- */
/* Registers description */
static const Register_t GammaReg[] =
	{

#ifdef GAMMA_MX1_ACTIVE
		/*-------------------------- MIXER 1 -------------------------------*/
	#ifdef GAMMA_7015
		{"GAM_MX1_CTL",		/* Control register */
		 MX1_BASE_ADDRESS,
		 MX_CTL,
		 0x005f475f,
		 0x005f475f,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_7015 */
	#if (defined GAMMA_7020)
		{"GAM_MX1_CTL",		/* Control register */
		 MX1_BASE_ADDRESS,
		 MX_CTL,
		 0x000083ff,
		 0x000083ff,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_7020 */
	#if (defined GAMMA_PANGEA || defined GAMMA_ATLAS)
		{"GAM_MX1_CTL",		/* Control register */
		 MX1_BASE_ADDRESS,
		 MX_CTL,
		 0x0000821f,
		 0x0000821f,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_PANGEA || GAMMA_ATLAS */
	#if (defined GAMMA_5528)
		{"GAM_MX1_CTL",		/* Control register */
		 MX1_BASE_ADDRESS,
		 MX_CTL,
		 0xfe1083ff,
		 0xfe1083ff,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_5528 */
	#ifdef GAMMA_ST40GX1
		{"GAM_MX1_CTL",		/* Control register */
		 MX1_BASE_ADDRESS,
		 MX_CTL,
		 0x7f5f005f,
		 0x7f5f005f,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_ST40GX1 */
		{"GAM_MX1_BKC",		/* BKC Color */
		 MX1_BASE_ADDRESS,
		 MX_BKC,
		 0x00ffffff,
		 0x00ffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_MX1_BCO",		/* BKC Offset */
		 MX1_BASE_ADDRESS,
		 MX_BCO,
		 0x07ff0fff,
		 0x07ff0fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_MX1_BCS",		/* BKC Stop */
		 MX1_BASE_ADDRESS,
		 MX_BCS,
		 0x07ff0fff,
		 0x07ff0fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_MX1_AVO",		/* Active Video Offset */
		 MX1_BASE_ADDRESS,
		 MX_AVO,
		 0x07ff0fff,
		 0x07ff0fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_MX1_AVS",		/* Active Video Stop */
		 MX1_BASE_ADDRESS,
		 MX_AVS,
		 0x07ff0fff,
		 0x07ff0fff,
		 0,
		 REG_32B,
		 0,
		},
	#if (defined GAMMA_7020)
		{"GAM_MX1_CRB",		/* Cross Bar */
		 MX1_BASE_ADDRESS,
		 MX_CRB,
		 0x00000ff8,
		 0x00000ff8,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_MX1_ACT",		/* Active Contents Flags Control */
		 MX1_BASE_ADDRESS,
		 MX_ACT,
		 0x037f037f,
		 0x037f037f,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_7020 */
	#if (defined GAMMA_PANGEA)
		{"GAM_MX1_CRB",		/* Cross Bar */
		 MX1_BASE_ADDRESS,
		 MX_CRB,
		 0x000001ff,
		 0x000001ff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_MX1_ACT",		/* Active Contents Flags Control */
		 MX1_BASE_ADDRESS,
		 MX_ACT,
		 0x021b021b,
		 0x021b021b,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_PANGEA */
	#if (defined GAMMA_ATLAS)
		{"GAM_MX1_CRB",		/* Cross Bar */
		 MX1_BASE_ADDRESS,
		 MX_CRB,
		 0x00000fff,
		 0x00000fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_MX1_ACT",		/* Active Contents Flags Control */
		 MX1_BASE_ADDRESS,
		 MX_ACT,
		 0x021f021f,
		 0x021f021f,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_ATLAS */
	#if (defined GAMMA_5528)
		{"GAM_MX1_CRB",		/* Cross Bar */
		 MX1_BASE_ADDRESS,
		 MX_CRB,
		 0x00000ff8,
		 0x00000ff8,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_5528 */
#endif /* GAMMA_MX1_ACTIVE */

#ifdef GAMMA_MX2_ACTIVE
		/*-------------------------- MIXER 2 -------------------------------*/
	#if (defined GAMMA_7015)
  		{"GAM_MX2_CTL",		/* Control register */
		 MX2_BASE_ADDRESS,
		 MX_CTL,
		 0x0000002c,
		 0x0000002c,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_7015 */
	#if (defined GAMMA_7020)
  		{"GAM_MX2_CTL",		/* Control register */
		 MX2_BASE_ADDRESS,
		 MX_CTL,
		 0x00000014,
		 0x00000014,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_MX2_ACT",		/* Active Content Flags Control */
		 MX2_BASE_ADDRESS,
		 MX_ACT,
		 0x00160016,
		 0x00160016,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_7020 */
	#if (defined GAMMA_ATLAS)
  		{"GAM_MX2_CTL",		/* Control register */
		 MX2_BASE_ADDRESS,
		 MX_CTL,
		 0x0000821f,
		 0x0000821f,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_MX2_BKC",		/* BKC2 Color */
		 MX2_BASE_ADDRESS,
		 MX_BKC,
		 0x00ffffff,
		 0x00ffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_MX2_BCO",		/* BKC2 Offset */
		 MX2_BASE_ADDRESS,
		 MX_BCO,
		 0x07ff0fff,
		 0x07ff0fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_MX2_BCS",		/* BKC2 Stop */
		 MX2_BASE_ADDRESS,
		 MX_BCS,
		 0x07ff0fff,
		 0x07ff0fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_MX2_CRB",		/* Cross Bar */
		 MX2_BASE_ADDRESS,
		 MX_CRB,
		 0x00000fff,
		 0x00000fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_MX2_ACT",		/* Active Contents Flags Control */
		 MX2_BASE_ADDRESS,
		 MX_ACT,
		 0x021f021f,
		 0x021f021f,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_ATLAS */
	#if (defined GAMMA_5528)
  		{"GAM_MX2_CTL",		/* Control register */
		 MX2_BASE_ADDRESS,
		 MX_CTL,
		 0x0600003f,
		 0x0600003f,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_MX2_BKC",		/* BKC2 Color */
		 MX2_BASE_ADDRESS,
		 MX_BKC,
		 0x00ffffff,
		 0x00ffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_MX2_BCO",		/* BKC2 Offset */
		 MX2_BASE_ADDRESS,
		 MX_BCO,
		 0x07ff0fff,
		 0x07ff0fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_MX2_BCS",		/* BKC2 Stop */
		 MX2_BASE_ADDRESS,
		 MX_BCS,
		 0x07ff0fff,
		 0x07ff0fff,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_5528 */
		{"GAM_MX2_AVO",		/* Active Video Offset */
		 MX2_BASE_ADDRESS,
		 MX_AVO,
		 0x07ff0fff,
		 0x07ff0fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_MX2_AVS",		/* Active Video Stop */
		 MX2_BASE_ADDRESS,
		 MX_AVS,
		 0x07ff0fff,
		 0x07ff0fff,
		 0,
		 REG_32B,
		 0,
		},
#endif /* GAMMA_MX2_ACTIVE */

#ifdef GAMMA_GFX1_ACTIVE
		/*-------------------------- GFX 1 -------------------------------*/
		{"GAM_GFX1_CTL",		/* Control register */
		 GFX1_BASE_ADDRESS,
		 GFX_CTL,
		 0x863f781f,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GFX1_AGC",		/* Alpha Gain Constant */
		 GFX1_BASE_ADDRESS,
		 GFX_AGC,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GFX1_SRC",		/* Sample Rate Converter */
		 GFX1_BASE_ADDRESS,
		 GFX_HSRC,
		 0x000701ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GFX1_VPO",		/* View Port Offset */
		 GFX1_BASE_ADDRESS,
		 GFX_VPO,
		 0x07ff0fff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GFX1_VPS",		/* View Port Stop */
		 GFX1_BASE_ADDRESS,
		 GFX_VPS,
		 0x07ff0fff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GFX1_PML",		/* Pixmap Memory Location */
		 GFX1_BASE_ADDRESS,
		 GFX_PML,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GFX1_PMP",		/* Pixmap Memory Pitch */
		 GFX1_BASE_ADDRESS,
		 GFX_PMP,
		 0x0000ffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GFX1_SIZE",		/* Pixmap Memory Size */
		 GFX1_BASE_ADDRESS,
		 GFX_SIZE,
		 0x07ff07ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GFX1_NVN",		/* Next Viewport Node */
		 GFX1_BASE_ADDRESS,
		 GFX_NVN,
		 0xfffffff0,
		 0xfffffff0,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_GFX1_KEY1",		/* Colour Key 1 */
		 GFX1_BASE_ADDRESS,
		 GFX_KEY1,
		 0x00ffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GFX1_KEY2",		/* Colour Key 2 */
		 GFX1_BASE_ADDRESS,
		 GFX_KEY2,
		 0x00ffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GFX1_PKZ",		/* Packet Size */
		 GFX1_BASE_ADDRESS,
		 GFX_PKZ,
		 0x00000007,
		 0x00000007,
		 0,
		 REG_32B,
		 0,
		},
#endif /* GAMMA_GFX1_ACTIVE */

#ifdef GAMMA_GFX2_ACTIVE
		/*-------------------------- GFX 2 -------------------------------*/
		{"GAM_GFX2_CTL",		/* Control register */
		 GFX2_BASE_ADDRESS,
		 GFX_CTL,
		 0x863f781f,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GFX2_AGC",		/* Alpha Gain Constant */
		 GFX2_BASE_ADDRESS,
		 GFX_AGC,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GFX2_SRC",		/* Sample Rate Converter */
		 GFX2_BASE_ADDRESS,
		 GFX_HSRC,
		 0x000701ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GFX2_VPO",		/* View Port Offset */
		 GFX2_BASE_ADDRESS,
		 GFX_VPO,
		 0x07ff0fff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GFX2_VPS",		/* View Port Stop */
		 GFX2_BASE_ADDRESS,
		 GFX_VPS,
		 0x07ff0fff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GFX2_PML",		/* Pixmap Memory Location */
		 GFX2_BASE_ADDRESS,
		 GFX_PML,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GFX2_PMP",		/* Pixmap Memory Pitch */
		 GFX2_BASE_ADDRESS,
		 GFX_PMP,
		 0x0000ffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GFX2_SIZE",		/* Pixmap Memory Size */
		 GFX2_BASE_ADDRESS,
		 GFX_SIZE,
		 0x07ff07ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GFX2_NVN",		/* Next Viewport Node */
		 GFX2_BASE_ADDRESS,
		 GFX_NVN,
		 0xfffffff0,
		 0xfffffff0,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_GFX2_KEY1",		/* Colour Key 1 */
		 GFX2_BASE_ADDRESS,
		 GFX_KEY1,
		 0x00ffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GFX2_KEY2",		/* Colour Key 2 */
		 GFX2_BASE_ADDRESS,
		 GFX_KEY2,
		 0x00ffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GFX2_PKZ",		/* Packet Size */
		 GFX2_BASE_ADDRESS,
		 GFX_PKZ,
		 0x00000007,
		 0x00000007,
		 0,
		 REG_32B,
		 0,
		},
#endif /* GAMMA_GFX2_ACTIVE */

#ifdef GAMMA_CAP_ACTIVE
		/*------------------------ CAPTURE --------------------------*/
	#ifdef GAMMA_7015
		{"GAM_CAP_CTL",			/* Control register */
		 CAP_BASE_ADDRESS,
		 CAP_CTL,
		 0x000001ff,
		 0x000001ff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_VPO",			/* View Port Offset */
		 CAP_BASE_ADDRESS,
		 CAP_VPO,
		 0x07ff07ff,
		 0x07ff07ff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_VPS",			/* View Port Stop */
		 CAP_BASE_ADDRESS,
		 CAP_VPS,
		 0x07ff07ff,
		 0x07ff07ff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_TML",			/* Top Field Memory Location */
		 CAP_BASE_ADDRESS,
		 CAP_TML,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_BML",			/* Bottom Field Memory Locationn */
		 CAP_BASE_ADDRESS,
		 CAP_BML,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_7015 */
	#ifdef GAMMA_7020
		{"GAM_CAP_CTL",			/* Control register */
		 CAP_BASE_ADDRESS,
		 CAP_CTL,
		 0x071f05ff,
		 0x071f05ff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_CWO",			/* Capture Window Offset */
		 CAP_BASE_ADDRESS,
		 CAP_CWO,
		 0x07ff0fff,
		 0x07ff0fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_CWS",			/* Capture Window Stop */
		 CAP_BASE_ADDRESS,
		 CAP_CWS,
		 0x07ff0fff,
		 0x07ff0fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_VTP",			/* Video Top Field memory Pointer */
		 CAP_BASE_ADDRESS,
		 CAP_VTP,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_VBP",			/* Video Bottom Field memory Pointer */
		 CAP_BASE_ADDRESS,
		 CAP_VBP,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_CMW",			/* Capture Memory Window */
		 CAP_BASE_ADDRESS,
		 CAP_CMW,
		 0xc7ff07ff,
		 0xc7ff07ff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_HSRC",		/* Hor. Sample Rate Converter */
		 CAP_BASE_ADDRESS,
		 CAP_HSRC,
		 0x01070fff,
		 0x01070fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_HFC0",		/* Hor. Filter Coefficient */
		 CAP_BASE_ADDRESS,
		 CAP_HFC0,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_HFC1",		/* Hor. Filter Coefficient */
		 CAP_BASE_ADDRESS,
		 CAP_HFC1,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_HFC2",		/* Hor. Filter Coefficient */
		 CAP_BASE_ADDRESS,
		 CAP_HFC2,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_HFC3",		/* Hor. Filter Coefficient */
		 CAP_BASE_ADDRESS,
		 CAP_HFC3,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_HFC4",		/* Hor. Filter Coefficient */
		 CAP_BASE_ADDRESS,
		 CAP_HFC4,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_HFC5",		/* Hor. Filter Coefficient */
		 CAP_BASE_ADDRESS,
		 CAP_HFC5,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_HFC6",		/* Hor. Filter Coefficient */
		 CAP_BASE_ADDRESS,
		 CAP_HFC6,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_HFC7",		/* Hor. Filter Coefficient */
		 CAP_BASE_ADDRESS,
		 CAP_HFC7,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_HFC8",		/* Hor. Filter Coefficient */
		 CAP_BASE_ADDRESS,
		 CAP_HFC8,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_HFC9",		/* Hor. Filter Coefficient */
		 CAP_BASE_ADDRESS,
		 CAP_HFC9,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_7020 */
		{"GAM_CAP_PMP",			/* Pixmap Memory Pitch */
		 CAP_BASE_ADDRESS,
		 CAP_PMP,
		 0x0000ffff,
		 0x0000ffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CAP_PKZ",			/* Packet Size */
		 CAP_BASE_ADDRESS,
		 CAP_PKZ,
		 0x00000007,
		 0x00000007,
		 0,
		 REG_32B,
		 0,
		},
#endif /* GAMMA_CAP_ACTIVE */

#ifdef GAMMA_ALP_ACTIVE
		/*-------------------------- ALP 1 -------------------------------*/
		{"GAM_ALP_CTL",		/* Control register */
		 ALP_BASE_ADDRESS,
		 ALP_CTL,
		 0xe0070e3f,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_ALP_ALP",		/* Alpha Control Register */
		 ALP_BASE_ADDRESS,
		 ALP_ALP,
		 0x0000ffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_ALP_HSRC",		/* Horizontal Sample Rate Converter */
		 ALP_BASE_ADDRESS,
		 ALP_HSRC,
		 0x010701ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_ALP_VSRC",		/* Vertical Sample Rate Converter */
		 ALP_BASE_ADDRESS,
		 ALP_VSRC,
		 0x000701ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_ALP_VPO",		/* View Port Offset */
		 ALP_BASE_ADDRESS,
		 ALP_VPO,
		 0x07ff0fff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_ALP_VPS",		/* View Port Stop */
		 ALP_BASE_ADDRESS,
		 ALP_VPS,
		 0x07ff0fff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_ALP_PML",		/* Pixmap Memory Location */
		 ALP_BASE_ADDRESS,
		 ALP_PML,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_ALP_PMP",		/* Pixmap Memory Pitch */
		 ALP_BASE_ADDRESS,
		 ALP_PMP,
		 0x0000ffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_ALP_SIZE",		/* Pixmap Memory Size */
		 ALP_BASE_ADDRESS,
		 ALP_SIZE,
		 0x07ff07ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_ALP_NVN",		/* Next Viewport Node */
		 ALP_BASE_ADDRESS,
		 ALP_NVN,
		 0xfffffff0,
		 0xfffffff0,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_ALP_HFP",		/* Horirontal Filter Pointer */
		 ALP_BASE_ADDRESS,
		 ALP_HFP,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_ALP_PPT",		/* Viewport Properties */
		 ALP_BASE_ADDRESS,
		 ALP_PPT,
		 0x000000f0,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
	#if (defined GAMMA_7015)
  		{"GAM_ALP_PKZ",		/* Packet Size */
		 ALP_BASE_ADDRESS,
		 ALP_PKZ,
		 0x00000007,
		 0x00000007,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_7015 */
	#if (defined GAMMA_7020 || defined GAMMA_PANGEA || defined GAMMA_ATLAS)
  		{"GAM_ALP_PKZ",		/* Packet Size */
		 ALP_BASE_ADDRESS,
		 ALP_PKZ,
		 0x00000037,
		 0x00000037,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_7020 || GAMMA_PANGEA || GAMMA_ATLAS */
		/*------------------------ ALP HORIZONTAL FILTER COEF --------------------------*/
		{"GAM_ALP_HFC0",			/* ALP Coeffs Line 0 */
		 BFC_BASE_ADDRESS,
		 ALP_HFC0,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_ALP_HFC1",			/* ALP Coeffs Line 1 */
		 BFC_BASE_ADDRESS,
		 ALP_HFC1,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_ALP_HFC2",			/* ALP Coeffs Line 2 */
		 BFC_BASE_ADDRESS,
		 ALP_HFC2,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_ALP_HFC3",			/* ALP Coeffs Line 3 */
		 BFC_BASE_ADDRESS,
		 ALP_HFC3,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_ALP_HFC4",			/* ALP Coeffs Line 4 */
		 BFC_BASE_ADDRESS,
		 ALP_HFC4,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_ALP_HFC5",			/* ALP Coeffs Line 5 */
		 BFC_BASE_ADDRESS,
		 ALP_HFC5,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_ALP_HFC6",			/* ALP Coeffs Line 6 */
		 BFC_BASE_ADDRESS,
		 ALP_HFC6,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_ALP_HFC7",			/* ALP Coeffs Line 7 */
		 BFC_BASE_ADDRESS,
		 ALP_HFC7,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_ALP_HFC8",			/* ALP Coeffs Line 8 */
		 BFC_BASE_ADDRESS,
		 ALP_HFC8,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_ALP_HFC9",			/* ALP Coeffs Line 9 */
		 BFC_BASE_ADDRESS,
		 ALP_HFC9,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
#endif /* GAMMA_ALP_ACTIVE */

#ifdef GAMMA_CUR_ACTIVE
		/*-------------------------- CUR -------------------------*/
		{"GAM_CUR_CTL",			/* Control register */
		 CUR_BASE_ADDRESS,
		 CUR_CTL,
		 0x00000002,
		 0x00000002,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CUR_VPO",			/* View Port Offset */
		 CUR_BASE_ADDRESS,
		 CUR_VPO,
		 0x0fff1fff,
		 0x0fff1fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CUR_PML",			/* Pixmap Memory Location */
		 CUR_BASE_ADDRESS,
		 CUR_PML,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CUR_PMP",			/* Pixmap Memory Pitch */
		 CUR_BASE_ADDRESS,
		 CUR_PMP,
		 0x0000ffff,
		 0x0000ffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CUR_SIZE",		/* Pixmap Memory Size */
		 CUR_BASE_ADDRESS,
		 CUR_SIZE,
		 0x00ff00ff,
		 0x00ff00ff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CUR_CML",			/* CLUT Memory Location */
		 CUR_BASE_ADDRESS,
		 CUR_CML,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CUR_AWS",			/* Active Window Start */
		 CUR_BASE_ADDRESS,
		 CUR_AWS,
		 0x07ff0fff,
		 0x07ff0fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CUR_AWE",			/* Active Window End */
		 CUR_BASE_ADDRESS,
		 CUR_AWE,
		 0x07ff0fff,
		 0x07ff0fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_CUR_PKZ",			/* Packet Size */
		 CUR_BASE_ADDRESS,
		 CUR_PKZ,
		 0x00000007,
		 0x00000007,
		 0,
		 REG_32B,
		 0,
		},
#endif /* GAMMA_CUR_ACTIVE */

#ifdef GAMMA_VI1_ACTIVE
		/*--------------------------- VI 1 ----------------------*/
		{"GAM_VID1_CTL",			/* Control register */
		 VI1_BASE_ADDRESS,
		 VI_CTL,
		 0xc63f7000,
		 0xc63f7000,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_VID1_ALP",			/* Alpha */
		 VI1_BASE_ADDRESS,
		 VI_ALP,
		 0x000000ff,
		 0x000000ff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_VID1_VPO",			/* View Port Offset */
		 VI1_BASE_ADDRESS,
		 VI_VPO,
		 0x07ff0fff,
		 0x07ff0fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_VID1_VPS",			/* View Port Stop */
		 VI1_BASE_ADDRESS,
		 VI_VPS,
		 0x07ff0fff,
		 0x07ff0fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_VID1_KEY1",		/* Colour Key 1 */
		 VI1_BASE_ADDRESS,
		 VI_KEY1,
		 0x00ffffff,
		 0x00ffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_VID1_KEY2",		/* Colour Key 2 */
		 VI1_BASE_ADDRESS,
		 VI_KEY2,
		 0x00ffffff,
		 0x00ffffff,
		 0,
		 REG_32B,
		 0,
		},
#ifndef ST_5528
		{"GAM_VID1_MPR1",		/* Matrix Programmation 1 */
		 VI1_BASE_ADDRESS,
		 VI_MPR1,
		 0x0fff007f,
		 0x0fff007f,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_VID1_MPR2",		/* Matrix Programmation 2 */
		 VI1_BASE_ADDRESS,
		 VI_MPR2,
		 0x0fff0fff,
		 0x0fff0fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_VID1_MPR3",		/* Matrix Programmation 3 */
		 VI1_BASE_ADDRESS,
		 VI_MPR3,
		 0x0fff0fff,
		 0x0fff0fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_VID1_MPR4",		/* Matrix Programmation 4 */
		 VI1_BASE_ADDRESS,
		 VI_MPR4,
		 0x0fff0fff,
		 0x0fff0fff,
		 0,
		 REG_32B,
		 0,
		},
#endif /* ST_5528 */
#endif /* GAMMA_VI1_ACTIVE */

#ifdef GAMMA_VI2_ACTIVE
		/*--------------------------- VI 2 ----------------------*/
		{"GAM_VID2_CTL",			/* Control register */
		 VI2_BASE_ADDRESS,
		 VI_CTL,
		 0xc63f7000,
		 0xc63f7000,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_VID2_ALP",			/* Alpha */
		 VI2_BASE_ADDRESS,
		 VI_ALP,
		 0x000000ff,
		 0x000000ff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_VID2_VPO",			/* View Port Offset */
		 VI2_BASE_ADDRESS,
		 VI_VPO,
		 0x07ff0fff,
		 0x07ff0fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_VID2_VPS",			/* View Port Stop */
		 VI2_BASE_ADDRESS,
		 VI_VPS,
		 0x07ff0fff,
		 0x07ff0fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_VID2_KEY1",		/* Colour Key 1 */
		 VI2_BASE_ADDRESS,
		 VI_KEY1,
		 0x00ffffff,
		 0x00ffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_VID2_KEY2",		/* Colour Key 2 */
		 VI2_BASE_ADDRESS,
		 VI_KEY2,
		 0x00ffffff,
		 0x00ffffff,
		 0,
		 REG_32B,
		 0,
		},
#ifndef ST_5528
		{"GAM_VID2_MPR1",		/* Matrix Programmation 1 */
		 VI2_BASE_ADDRESS,
		 VI_MPR1,
		 0x0fff007f,
		 0x0fff007f,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_VID2_MPR2",		/* Matrix Programmation 2 */
		 VI2_BASE_ADDRESS,
		 VI_MPR2,
		 0x0fff0fff,
		 0x0fff0fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_VID2_MPR3",		/* Matrix Programmation 3 */
		 VI2_BASE_ADDRESS,
		 VI_MPR3,
		 0x0fff0fff,
		 0x0fff0fff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_VID2_MPR4",		/* Matrix Programmation 4 */
		 VI2_BASE_ADDRESS,
		 VI_MPR4,
		 0x0fff0fff,
		 0x0fff0fff,
		 0,
		 REG_32B,
		 0,
		},
#endif /* ST_5528 */
#endif /* GAMMA_VI2_ACTIVE */

#ifdef GAMMA_GDP1_ACTIVE
		/*-------------------------- GDP 1 -------------------------------*/
		{"GAM_GDP1_CTL",		/* Control register */
		 GDP1_BASE_ADDRESS,
		 GDP_CTL,
		 0xe73f7c1f,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_AGC",		/* Alpha Gain Constant */
		 GDP1_BASE_ADDRESS,
		 GDP_AGC,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_HSRC",		/* Horizontal Sample Rate Converter */
		 GDP1_BASE_ADDRESS,
		 GDP_HSRC,
		 0x010701ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_VSRC",		/* Vertical Sample Rate Converter */
		 GDP1_BASE_ADDRESS,
		 GDP_VSRC,
		 0x000701ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_VPO",		/* View Port Offset */
		 GDP1_BASE_ADDRESS,
		 GDP_VPO,
		 0x07ff0fff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_VPS",		/* View Port Stop */
		 GDP1_BASE_ADDRESS,
		 GDP_VPS,
		 0x07ff0fff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_PML",		/* Pixmap Memory Location */
		 GDP1_BASE_ADDRESS,
		 GDP_PML,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_PMP",		/* Pixmap Memory Pitch */
		 GDP1_BASE_ADDRESS,
		 GDP_PMP,
		 0x0000ffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_SIZE",		/* Pixmap Memory Size */
		 GDP1_BASE_ADDRESS,
		 GDP_SIZE,
		 0x07ff07ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_NVN",		/* Next Viewport Node */
		 GDP1_BASE_ADDRESS,
		 GDP_NVN,
		 0xfffffff0,
		 0xfffffff0,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_GDP1_KEY1",		/* Colour Key 1 */
		 GDP1_BASE_ADDRESS,
		 GDP_KEY1,
		 0x00ffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_KEY2",		/* Colour Key 2 */
		 GDP1_BASE_ADDRESS,
		 GDP_KEY2,
		 0x00ffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_HFP",		/* Horirontal Filter Pointer */
		 GDP1_BASE_ADDRESS,
		 GDP_HFP,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_PPT",		/* Viewport Properties */
		 GDP1_BASE_ADDRESS,
		 GDP_PPT,
		 0x0000007f,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
	#if (defined GAMMA_7020 || defined GAMMA_PANGEA || defined GAMMA_ATLAS)
    	{"GAM_GDP1_PKZ",		/* Packet Size */
		 GDP1_BASE_ADDRESS,
		 GDP_PKZ,
		 0x00000037,
		 0x00000037,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_7020 || GAMMA_PANGEA || GAMMA_ATLAS */
	#if (defined GAMMA_ST40GX1)
    	{"GAM_GDP1_PKZ",		/* Packet Size */
		 GDP1_BASE_ADDRESS,
		 GDP_PKZ,
		 0x00000007,
		 0x00000007,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_ST40GX1 */
		/*------------------------ GDP1 HORIZONTAL FILTER COEF --------------------------*/
		{"GAM_GDP1_HFC0",			/* GDP1 Coeffs Line 0 */
		 GDP1_BASE_ADDRESS,
		 GDP_HFC0,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_HFC1",			/* GDP1 Coeffs Line 1 */
		 GDP1_BASE_ADDRESS,
		 GDP_HFC1,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_HFC2",			/* GDP1 Coeffs Line 2 */
		 GDP1_BASE_ADDRESS,
		 GDP_HFC2,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_HFC3",			/* GDP1 Coeffs Line 3 */
		 GDP1_BASE_ADDRESS,
		 GDP_HFC3,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_HFC4",			/* GDP1 Coeffs Line 4 */
		 GDP1_BASE_ADDRESS,
		 GDP_HFC4,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_HFC5",			/* GDP1 Coeffs Line 5 */
		 GDP1_BASE_ADDRESS,
		 GDP_HFC5,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_HFC6",			/* GDP1 Coeffs Line 6 */
		 GDP1_BASE_ADDRESS,
		 GDP_HFC6,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_HFC7",			/* GDP1 Coeffs Line 7 */
		 GDP1_BASE_ADDRESS,
		 GDP_HFC7,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_HFC8",			/* GDP1 Coeffs Line 8 */
		 GDP1_BASE_ADDRESS,
		 GDP_HFC8,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP1_HFC9",			/* GDP1 Coeffs Line 9 */
		 GDP1_BASE_ADDRESS,
		 GDP_HFC9,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
#endif /* GAMMA_GDP1_ACTIVE */

#ifdef GAMMA_GDP2_ACTIVE
		/*-------------------------- GDP 2 -------------------------------*/
		{"GAM_GDP2_CTL",		/* Control register */
		 GDP2_BASE_ADDRESS,
		 GDP_CTL,
		 0xe73f7c1f,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_AGC",		/* Alpha Gain Constant */
		 GDP2_BASE_ADDRESS,
		 GDP_AGC,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_HSRC",		/* Horizontal Sample Rate Converter */
		 GDP2_BASE_ADDRESS,
		 GDP_HSRC,
		 0x010701ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_VSRC",		/* Vertical Sample Rate Converter */
		 GDP2_BASE_ADDRESS,
		 GDP_VSRC,
		 0x000701ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_VPO",		/* View Port Offset */
		 GDP2_BASE_ADDRESS,
		 GDP_VPO,
		 0x07ff0fff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_VPS",		/* View Port Stop */
		 GDP2_BASE_ADDRESS,
		 GDP_VPS,
		 0x07ff0fff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_PML",		/* Pixmap Memory Location */
		 GDP2_BASE_ADDRESS,
		 GDP_PML,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_PMP",		/* Pixmap Memory Pitch */
		 GDP2_BASE_ADDRESS,
		 GDP_PMP,
		 0x0000ffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_SIZE",		/* Pixmap Memory Size */
		 GDP2_BASE_ADDRESS,
		 GDP_SIZE,
		 0x07ff07ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_NVN",		/* Next Viewport Node */
		 GDP2_BASE_ADDRESS,
		 GDP_NVN,
		 0xfffffff0,
		 0xfffffff0,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_GDP2_KEY1",		/* Colour Key 1 */
		 GDP2_BASE_ADDRESS,
		 GDP_KEY1,
		 0x00ffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_KEY2",		/* Colour Key 2 */
		 GDP2_BASE_ADDRESS,
		 GDP_KEY2,
		 0x00ffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_HFP",		/* Horirontal Filter Pointer */
		 GDP2_BASE_ADDRESS,
		 GDP_HFP,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_PPT",		/* Viewport Properties */
		 GDP2_BASE_ADDRESS,
		 GDP_PPT,
		 0x0000007f,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
	#if (defined GAMMA_7020 || defined GAMMA_PANGEA || defined GAMMA_ATLAS)
    	{"GAM_GDP2_PKZ",		/* Packet Size */
		 GDP2_BASE_ADDRESS,
		 GDP_PKZ,
		 0x00000037,
		 0x00000037,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_7020 || GAMMA_PANGEA || GAMMA_ATLAS */
	#if (defined GAMMA_ST40GX1)
    	{"GAM_GDP2_PKZ",		/* Packet Size */
		 GDP2_BASE_ADDRESS,
		 GDP_PKZ,
		 0x00000007,
		 0x00000007,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_ST40GX1 */
		/*------------------------ GDP2 HORIZONTAL FILTER COEF --------------------------*/
		{"GAM_GDP2_HFC0",			/* GDP2 Coeffs Line 0 */
		 GDP2_BASE_ADDRESS,
		 GDP_HFC0,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_HFC1",			/* GDP2 Coeffs Line 1 */
		 GDP2_BASE_ADDRESS,
		 GDP_HFC1,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_HFC2",			/* GDP2 Coeffs Line 2 */
		 GDP2_BASE_ADDRESS,
		 GDP_HFC2,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_HFC3",			/* GDP2 Coeffs Line 3 */
		 GDP2_BASE_ADDRESS,
		 GDP_HFC3,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_HFC4",			/* GDP2 Coeffs Line 4 */
		 GDP2_BASE_ADDRESS,
		 GDP_HFC4,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_HFC5",			/* GDP2 Coeffs Line 5 */
		 GDP2_BASE_ADDRESS,
		 GDP_HFC5,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_HFC6",			/* GDP2 Coeffs Line 6 */
		 GDP2_BASE_ADDRESS,
		 GDP_HFC6,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_HFC7",			/* GDP2 Coeffs Line 7 */
		 GDP2_BASE_ADDRESS,
		 GDP_HFC7,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_HFC8",			/* GDP2 Coeffs Line 8 */
		 GDP2_BASE_ADDRESS,
		 GDP_HFC8,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP2_HFC9",			/* GDP2 Coeffs Line 9 */
		 GDP2_BASE_ADDRESS,
		 GDP_HFC9,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
#endif /* GAMMA_GDP2_ACTIVE */

#ifdef GAMMA_GDP3_ACTIVE
		/*-------------------------- GDP 3 -------------------------------*/
		{"GAM_GDP3_CTL",		/* Control register */
		 GDP3_BASE_ADDRESS,
		 GDP_CTL,
		 0xe73f7c1f,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_AGC",		/* Alpha Gain Constant */
		 GDP3_BASE_ADDRESS,
		 GDP_AGC,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_HSRC",		/* Horizontal Sample Rate Converter */
		 GDP3_BASE_ADDRESS,
		 GDP_HSRC,
		 0x010701ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_VSRC",		/* Vertical Sample Rate Converter */
		 GDP3_BASE_ADDRESS,
		 GDP_VSRC,
		 0x000701ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_VPO",		/* View Port Offset */
		 GDP3_BASE_ADDRESS,
		 GDP_VPO,
		 0x07ff0fff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_VPS",		/* View Port Stop */
		 GDP3_BASE_ADDRESS,
		 GDP_VPS,
		 0x07ff0fff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_PML",		/* Pixmap Memory Location */
		 GDP3_BASE_ADDRESS,
		 GDP_PML,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_PMP",		/* Pixmap Memory Pitch */
		 GDP3_BASE_ADDRESS,
		 GDP_PMP,
		 0x0000ffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_SIZE",		/* Pixmap Memory Size */
		 GDP3_BASE_ADDRESS,
		 GDP_SIZE,
		 0x07ff07ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_NVN",		/* Next Viewport Node */
		 GDP3_BASE_ADDRESS,
		 GDP_NVN,
		 0xfffffff0,
		 0xfffffff0,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_GDP3_KEY1",		/* Colour Key 1 */
		 GDP3_BASE_ADDRESS,
		 GDP_KEY1,
		 0x00ffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_KEY2",		/* Colour Key 2 */
		 GDP3_BASE_ADDRESS,
		 GDP_KEY2,
		 0x00ffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_HFP",		/* Horirontal Filter Pointer */
		 GDP3_BASE_ADDRESS,
		 GDP_HFP,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_PPT",		/* Viewport Properties */
		 GDP3_BASE_ADDRESS,
		 GDP_PPT,
		 0x0000007f,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
	#if (defined GAMMA_7020 || defined GAMMA_PANGEA || defined GAMMA_ATLAS)
    	{"GAM_GDP3_PKZ",		/* Packet Size */
		 GDP3_BASE_ADDRESS,
		 GDP_PKZ,
		 0x00000037,
		 0x00000037,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_7020 || GAMMA_PANGEA || GAMMA_ATLAS */
	#if (defined GAMMA_ST40GX1)
    	{"GAM_GDP3_PKZ",		/* Packet Size */
		 GDP3_BASE_ADDRESS,
		 GDP_PKZ,
		 0x00000007,
		 0x00000007,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_ST40GX1 */
		/*------------------------ GDP3 HORIZONTAL FILTER COEF --------------------------*/
		{"GAM_GDP3_HFC0",			/* GDP3 Coeffs Line 0 */
		 GDP3_BASE_ADDRESS,
		 GDP_HFC0,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_HFC1",			/* GDP3 Coeffs Line 1 */
		 GDP3_BASE_ADDRESS,
		 GDP_HFC1,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_HFC2",			/* GDP3 Coeffs Line 2 */
		 GDP3_BASE_ADDRESS,
		 GDP_HFC2,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_HFC3",			/* GDP3 Coeffs Line 3 */
		 GDP3_BASE_ADDRESS,
		 GDP_HFC3,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_HFC4",			/* GDP3 Coeffs Line 4 */
		 GDP3_BASE_ADDRESS,
		 GDP_HFC4,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_HFC5",			/* GDP3 Coeffs Line 5 */
		 GDP3_BASE_ADDRESS,
		 GDP_HFC5,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_HFC6",			/* GDP3 Coeffs Line 6 */
		 GDP3_BASE_ADDRESS,
		 GDP_HFC6,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_HFC7",			/* GDP3 Coeffs Line 7 */
		 GDP3_BASE_ADDRESS,
		 GDP_HFC7,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_HFC8",			/* GDP3 Coeffs Line 8 */
		 GDP3_BASE_ADDRESS,
		 GDP_HFC8,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP3_HFC9",			/* GDP3 Coeffs Line 9 */
		 GDP3_BASE_ADDRESS,
		 GDP_HFC9,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
#endif /* GAMMA_GDP3_ACTIVE */

#ifdef GAMMA_GDP4_ACTIVE
		/*-------------------------- GDP 4 -------------------------------*/
		{"GAM_GDP4_CTL",		/* Control register */
		 GDP4_BASE_ADDRESS,
		 GDP_CTL,
		 0xe73f7c1f,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_AGC",		/* Alpha Gain Constant */
		 GDP4_BASE_ADDRESS,
		 GDP_AGC,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_HSRC",		/* Horizontal Sample Rate Converter */
		 GDP4_BASE_ADDRESS,
		 GDP_HSRC,
		 0x010701ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_VSRC",		/* Vertical Sample Rate Converter */
		 GDP4_BASE_ADDRESS,
		 GDP_VSRC,
		 0x000701ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_VPO",		/* View Port Offset */
		 GDP4_BASE_ADDRESS,
		 GDP_VPO,
		 0x07ff0fff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_VPS",		/* View Port Stop */
		 GDP4_BASE_ADDRESS,
		 GDP_VPS,
		 0x07ff0fff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_PML",		/* Pixmap Memory Location */
		 GDP4_BASE_ADDRESS,
		 GDP_PML,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_PMP",		/* Pixmap Memory Pitch */
		 GDP4_BASE_ADDRESS,
		 GDP_PMP,
		 0x0000ffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_SIZE",		/* Pixmap Memory Size */
		 GDP4_BASE_ADDRESS,
		 GDP_SIZE,
		 0x07ff07ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_NVN",		/* Next Viewport Node */
		 GDP4_BASE_ADDRESS,
		 GDP_NVN,
		 0xfffffff0,
		 0xfffffff0,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_GDP4_KEY1",		/* Colour Key 1 */
		 GDP4_BASE_ADDRESS,
		 GDP_KEY1,
		 0x00ffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_KEY2",		/* Colour Key 2 */
		 GDP4_BASE_ADDRESS,
		 GDP_KEY2,
		 0x00ffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_HFP",		/* Horirontal Filter Pointer */
		 GDP4_BASE_ADDRESS,
		 GDP_HFP,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_PPT",		/* Viewport Properties */
		 GDP4_BASE_ADDRESS,
		 GDP_PPT,
		 0x0000007f,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
	#if (defined GAMMA_7020 || defined GAMMA_PANGEA || defined GAMMA_ATLAS)
    	{"GAM_GDP4_PKZ",		/* Packet Size */
		 GDP4_BASE_ADDRESS,
		 GDP_PKZ,
		 0x00000037,
		 0x00000037,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_7020 || GAMMA_PANGEA || GAMMA_ATLAS */
	#if (defined GAMMA_ST40GX1)
    	{"GAM_GDP4_PKZ",		/* Packet Size */
		 GDP4_BASE_ADDRESS,
		 GDP_PKZ,
		 0x00000007,
		 0x00000007,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_ST40GX1 */
		/*------------------------ GDP4 HORIZONTAL FILTER COEF --------------------------*/
		{"GAM_GDP4_HFC0",			/* GDP4 Coeffs Line 0 */
		 GDP4_BASE_ADDRESS,
		 GDP_HFC0,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_HFC1",			/* GDP4 Coeffs Line 1 */
		 GDP4_BASE_ADDRESS,
		 GDP_HFC1,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_HFC2",			/* GDP4 Coeffs Line 2 */
		 GDP4_BASE_ADDRESS,
		 GDP_HFC2,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_HFC3",			/* GDP4 Coeffs Line 3 */
		 GDP4_BASE_ADDRESS,
		 GDP_HFC3,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_HFC4",			/* GDP4 Coeffs Line 4 */
		 GDP4_BASE_ADDRESS,
		 GDP_HFC4,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_HFC5",			/* GDP4 Coeffs Line 5 */
		 GDP4_BASE_ADDRESS,
		 GDP_HFC5,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_HFC6",			/* GDP4 Coeffs Line 6 */
		 GDP4_BASE_ADDRESS,
		 GDP_HFC6,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_HFC7",			/* GDP4 Coeffs Line 7 */
		 GDP4_BASE_ADDRESS,
		 GDP_HFC7,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_HFC8",			/* GDP4 Coeffs Line 8 */
		 GDP4_BASE_ADDRESS,
		 GDP_HFC8,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP4_HFC9",			/* GDP4 Coeffs Line 9 */
		 GDP4_BASE_ADDRESS,
		 GDP_HFC9,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
#endif /* GAMMA_GDP4_ACTIVE */

#ifdef GAMMA_GDP5_ACTIVE
		/*-------------------------- GDP aux -------------------------------*/
		{"GAM_GDP5_CTL",		/* Control register */
		 GDP5_BASE_ADDRESS,
		 GDP_CTL,
		 0xe73f7c1f,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_AGC",		/* Alpha Gain Constant */
		 GDP5_BASE_ADDRESS,
		 GDP_AGC,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_HSRC",		/* Horizontal Sample Rate Converter */
		 GDP5_BASE_ADDRESS,
		 GDP_HSRC,
		 0x010701ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_VSRC",		/* Vertical Sample Rate Converter */
		 GDP5_BASE_ADDRESS,
		 GDP_VSRC,
		 0x000701ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_VPO",		/* View Port Offset */
		 GDP5_BASE_ADDRESS,
		 GDP_VPO,
		 0x07ff0fff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_VPS",		/* View Port Stop */
		 GDP5_BASE_ADDRESS,
		 GDP_VPS,
		 0x07ff0fff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_PML",		/* Pixmap Memory Location */
		 GDP5_BASE_ADDRESS,
		 GDP_PML,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_PMP",		/* Pixmap Memory Pitch */
		 GDP5_BASE_ADDRESS,
		 GDP_PMP,
		 0x0000ffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_SIZE",		/* Pixmap Memory Size */
		 GDP5_BASE_ADDRESS,
		 GDP_SIZE,
		 0x07ff07ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_NVN",		/* Next Viewport Node */
		 GDP5_BASE_ADDRESS,
		 GDP_NVN,
		 0xfffffff0,
		 0xfffffff0,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_GDP5_KEY1",		/* Colour Key 1 */
		 GDP5_BASE_ADDRESS,
		 GDP_KEY1,
		 0x00ffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_KEY2",		/* Colour Key 2 */
		 GDP5_BASE_ADDRESS,
		 GDP_KEY2,
		 0x00ffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_HFP",		/* Horirontal Filter Pointer */
		 GDP5_BASE_ADDRESS,
		 GDP_HFP,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_PPT",		/* Viewport Properties */
		 GDP5_BASE_ADDRESS,
		 GDP_PPT,
		 0x0000007f,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
	#if (defined GAMMA_7020 || defined GAMMA_PANGEA || defined GAMMA_ATLAS)
    	{"GAM_GDP5_PKZ",		/* Packet Size */
		 GDP5_BASE_ADDRESS,
		 GDP_PKZ,
		 0x00000037,
		 0x00000037,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_7020 || GAMMA_PANGEA || GAMMA_ATLAS */
	#if (defined GAMMA_ST40GX1)
    	{"GAM_GDP5_PKZ",		/* Packet Size */
		 GDP5_BASE_ADDRESS,
		 GDP_PKZ,
		 0x00000007,
		 0x00000007,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_ST40GX1 */
		/*------------------------ GDP5 HORIZONTAL FILTER COEF --------------------------*/
		{"GAM_GDP5_HFC0",			/* GDP5 Coeffs Line 0 */
		 GDP5_BASE_ADDRESS,
		 GDP_HFC0,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_HFC1",			/* GDP5 Coeffs Line 1 */
		 GDP5_BASE_ADDRESS,
		 GDP_HFC1,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_HFC2",			/* GDP5 Coeffs Line 2 */
		 GDP5_BASE_ADDRESS,
		 GDP_HFC2,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_HFC3",			/* GDP5 Coeffs Line 3 */
		 GDP5_BASE_ADDRESS,
		 GDP_HFC3,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_HFC4",			/* GDP5 Coeffs Line 4 */
		 GDP5_BASE_ADDRESS,
		 GDP_HFC4,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_HFC5",			/* GDP5 Coeffs Line 5 */
		 GDP5_BASE_ADDRESS,
		 GDP_HFC5,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_HFC6",			/* GDP5 Coeffs Line 6 */
		 GDP5_BASE_ADDRESS,
		 GDP_HFC6,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_HFC7",			/* GDP5 Coeffs Line 7 */
		 GDP5_BASE_ADDRESS,
		 GDP_HFC7,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_HFC8",			/* GDP5 Coeffs Line 8 */
		 GDP5_BASE_ADDRESS,
		 GDP_HFC8,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_GDP5_HFC9",			/* GDP5 Coeffs Line 9 */
		 GDP5_BASE_ADDRESS,
		 GDP_HFC9,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
#endif /* GAMMA_GDP5_ACTIVE */

#ifdef GAMMA_BLT_ACTIVE
		/*------------------------ BLITTER --------------------------*/
		{"GAM_BLT_CTL",			/* Control register */
		 BLT_BASE_ADDRESS,
		 BLT_CTL,
		 0x0000000f,
		 0x0000000f,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_BLT_STA1",		/* Status 1 */
		 BLT_BASE_ADDRESS,
		 BLT_STA1,
		 0x03ffffff,
		 0x00000000,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_BLT_STA2",		/* Status 2 */
		 BLT_BASE_ADDRESS,
		 BLT_STA2,
		 0x00000fff,
		 0x00000000,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_BLT_STA3",		/* Status 3 */
		 BLT_BASE_ADDRESS,
		 BLT_STA3,
		 0x0000000f,
		 0x0000000e,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_NIP",			/* Next Instruction Pointer */
		 BLT_BASE_ADDRESS,
		 BLT_NIP,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_BLT_USR",			/* User Specific Register */
		 BLT_BASE_ADDRESS,
		 BLT_USR,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_INS",			/* Instruction Register */
		 BLT_BASE_ADDRESS,
		 BLT_INS,
		 0x7f9c5fdf,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_S1BA",		/* Src1 Base Address */
		 BLT_BASE_ADDRESS,
		 BLT_S1BA,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_S1TY",		/* Src1 Type */
		 BLT_BASE_ADDRESS,
		 BLT_S1TY,
		 0x33bfffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_S1XY",		/* Src1 XY Location */
		 BLT_BASE_ADDRESS,
		 BLT_S1XY,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_S1SZ",		/* Src1 Size */
		 BLT_BASE_ADDRESS,
		 BLT_S1SZ,
		 0x0fff0fff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_S1CF",		/* Src1 Color Fill */
		 BLT_BASE_ADDRESS,
		 BLT_S1CF,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_S2BA",		/* Src2 Base Address */
		 BLT_BASE_ADDRESS,
		 BLT_S2BA,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_S2TY",		/* Src2 Type */
		 BLT_BASE_ADDRESS,
		 BLT_S2TY,
		 0x3F1fffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_S2XY",		/* Src2 XY Location */
		 BLT_BASE_ADDRESS,
		 BLT_S2XY,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_S2SZ",		/* Src2 Size */
		 BLT_BASE_ADDRESS,
		 BLT_S2SZ,
		 0x0fff0fff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_S2CF",		/* Src2 Color Fill */
		 BLT_BASE_ADDRESS,
		 BLT_S2CF,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_TBA",			/* Target Base Address */
		 BLT_BASE_ADDRESS,
		 BLT_TBA,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_TTY",			/* Target Type */
		 BLT_BASE_ADDRESS,
		 BLT_TTY,
		 0x1F1fffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_TXY",			/* Target XY Location */
		 BLT_BASE_ADDRESS,
		 BLT_TXY,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_CWO",			/* Clipping Window Offset */
		 BLT_BASE_ADDRESS,
		 BLT_CWO,
		 0xffff7fff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_CWS",			/* Clipping Window Stop */
		 BLT_BASE_ADDRESS,
		 BLT_CWS,
		 0x7fff7fff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_CCO",			/* Color Conversion Operators */
		 BLT_BASE_ADDRESS,
		 BLT_CCO,
		 0x007f0307,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_CML",			/* CLUT Memory Location */
		 BLT_BASE_ADDRESS,
		 BLT_CML,
		 0xfffffff0,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_RZC",			/* 2D Resize Control */
		 BLT_BASE_ADDRESS,
		 BLT_RZC,
		 0x00773333,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_HFP",			/* H Filter Coeff Pointer */
		 BLT_BASE_ADDRESS,
		 BLT_HFP,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_VFP",			/* V Filter Coeff Pointer */
		 BLT_BASE_ADDRESS,
		 BLT_VFP,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_RSF",			/* Resize Scaling Factor */
		 BLT_BASE_ADDRESS,
		 BLT_RSF,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_FF0",			/* Flicker Filter 0 */
		 BLT_BASE_ADDRESS,
		 BLT_FF0,
		 0x0fffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_FF1",			/* Flicker Filter 1 */
		 BLT_BASE_ADDRESS,
		 BLT_FF1,
		 0x0fffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_FF2",			/* Flicker Filter 2 */
		 BLT_BASE_ADDRESS,
		 BLT_FF2,
		 0x0fffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_FF3",			/* Flicker Filter 3 */
		 BLT_BASE_ADDRESS,
		 BLT_FF3,
		 0x00ffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_ACK",			/* ALU and Color Key control */
		 BLT_BASE_ADDRESS,
		 BLT_ACK,
		 0x00ffff07,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_KEY1",		/* Colour Key 1 */
		 BLT_BASE_ADDRESS,
		 BLT_KEY1,
		 0x00ffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_KEY2",		/* Colour Key 2 */
		 BLT_BASE_ADDRESS,
		 BLT_KEY2,
		 0x00ffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_PMK",			/* Plane Mask */
		 BLT_BASE_ADDRESS,
		 BLT_PMK,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_RST",			/* Raster Scan Trigger */
		 BLT_BASE_ADDRESS,
		 BLT_RST,
		 0x000107ff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
	#if (defined GAMMA_7020 || defined GAMMA_PANGEA || defined GAMMA_ATLAS || defined GAMMA_ST40GX1)
		{"GAM_BLT_XYL",			/* XYL */
		 BLT_BASE_ADDRESS,
		 BLT_XYL,
		 0xffff0301,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_XYP",			/* XYP */
		 BLT_BASE_ADDRESS,
		 BLT_XYP,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
	#endif /* GAMMA_7020 || GAMMA_PANGEA || GAMMA_ATLAS || GAMMA_ST40GX1 */

		/*------------------------ BLT 2D FILTER COEF --------------------------*/
		{"GAM_BLT_HFC0",			/* HFC Coeffs Line 0 */
		 BFC_BASE_ADDRESS,
		 BLT_HFC0,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_HFC1",			/* HFC Coeffs Line 1 */
		 BFC_BASE_ADDRESS,
		 BLT_HFC1,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_HFC2",			/* HFC Coeffs Line 2 */
		 BFC_BASE_ADDRESS,
		 BLT_HFC2,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_HFC3",			/* HFC Coeffs Line 3 */
		 BFC_BASE_ADDRESS,
		 BLT_HFC3,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_HFC4",			/* HFC Coeffs Line 4 */
		 BFC_BASE_ADDRESS,
		 BLT_HFC4,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_HFC5",			/* HFC Coeffs Line 5 */
		 BFC_BASE_ADDRESS,
		 BLT_HFC5,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_HFC6",			/* HFC Coeffs Line 6 */
		 BFC_BASE_ADDRESS,
		 BLT_HFC6,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_HFC7",			/* HFC Coeffs Line 7 */
		 BFC_BASE_ADDRESS,
		 BLT_HFC7,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_HFC8",			/* HFC Coeffs Line 8 */
		 BFC_BASE_ADDRESS,
		 BLT_HFC8,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_HFC9",			/* HFC Coeffs Line 9 */
		 BFC_BASE_ADDRESS,
		 BLT_HFC9,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_VFC0",			/* VFC Coeffs Line 0 */
		 BFC_BASE_ADDRESS,
		 BLT_VFC0,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_VFC1",			/* VFC Coeffs Line 1 */
		 BFC_BASE_ADDRESS,
		 BLT_VFC1,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_VFC2",			/* VFC Coeffs Line 2 */
		 BFC_BASE_ADDRESS,
		 BLT_VFC2,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_VFC3",			/* VFC Coeffs Line 3 */
		 BFC_BASE_ADDRESS,
		 BLT_VFC3,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_VFC4",			/* VFC Coeffs Line 4 */
		 BFC_BASE_ADDRESS,
		 BLT_VFC4,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_VFC5",			/* VFC Coeffs Line 5 */
		 BFC_BASE_ADDRESS,
		 BLT_VFC5,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_VFC6",			/* VFC Coeffs Line 6 */
		 BFC_BASE_ADDRESS,
		 BLT_VFC6,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_VFC7",			/* VFC Coeffs Line 7 */
		 BFC_BASE_ADDRESS,
		 BLT_VFC7,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_VFC8",			/* VFC Coeffs Line 8 */
		 BFC_BASE_ADDRESS,
		 BLT_VFC8,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},
		{"GAM_BLT_VFC9",			/* VFC Coeffs Line 9 */
		 BFC_BASE_ADDRESS,
		 BLT_VFC9,
		 0xffffffff,
		 0x00000000,
		 0,
		 REG_32B | REG_SPECIAL,
		 0,
		},

		{"GAM_BLT_PKZ",			/* Packet Size */
		 BLT_BASE_ADDRESS,
		 BLT_PKZ,
		 0x00000027,
		 0x00000027,
		 0,
		 REG_32B,
		 0,
		},

	#if (defined GAMMA_PANGEA || defined GAMMA_ATLAS || defined GAMMA_5528)
		{"GAM_BLT_STB",			/* Bandwidth Limiter */
		 BFC_BASE_ADDRESS,
		 BLT_STB,
		 0x000003FF,
		 0x000003FF,
		 0,
		 REG_32B,
		 0,
		},
	#endif /* GAMMA_PANGEA || GAMMA_ATLAS || GAMMA_5528 */

		/*------------------------ WRAPPER --------------------------*/
		{"GAM_WP_PORD",			/* Wrapper Process Priority Order */
		 WP_BASE_ADDRESS,
		 WP_PORD,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_WP_PGAM",			/* Wrapper Priority Gamma */
		 WP_BASE_ADDRESS,
		 WP_PGAM,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"GAM_WP_SEC",			/* Wrapper Security System */
		 WP_BASE_ADDRESS,
		 WP_SEC,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
#endif /* GAMMA_BLT_ACTIVE */

#ifdef GAMMA_DISP1_ACTIVE /* HD Display */
		{"DISP1_CTL",			/* Display Control */
		 DISP0_BASE_ADDRESS,
		 DISP_CTL,
		 0xe0f00000,
		 0xe0f00000,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_LUMA_HSRC",			/* Display Luma HSRC */
		 DISP0_BASE_ADDRESS,
		 DISP_LUMA_HSRC,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_LUMA_VSRC",			/* Display Luma VSRC */
		 DISP0_BASE_ADDRESS,
		 DISP_LUMA_VSRC,
		 0x7fffffff,
		 0x7fffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_CHR_HSRC",			/* Display Chroma HSRC */
		 DISP0_BASE_ADDRESS,
		 DISP_CHR_HSRC,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_CHR_VSRC",			/* Display Chroma VSRC */
		 DISP0_BASE_ADDRESS,
		 DISP_CHR_VSRC,
		 0x7fffffff,
		 0x7fffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_TARGET_SIZE",			/* Display Target Pixmap Size */
		 DISP0_BASE_ADDRESS,
		 DISP_TARGET_SIZE,
		 0x07ff07ff,
		 0x07ff07ff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_NLZZD_Y",			/* Display Luma   Non Linear Zoom Zone Definition */
		 DISP0_BASE_ADDRESS,
		 DISP_NLZZD_Y,
		 0x07ff07ff,
		 0x07ff07ff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_NLZZD_C",			/* Display Chroma Non Linear Zoom Zone Definition */
		 DISP0_BASE_ADDRESS,
		 DISP_NLZZD_C,
		 0x07ff07ff,
		 0x07ff07ff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_PDELTA",			/* Display Non Linear Zoom - Increment Step Definition */
		 DISP0_BASE_ADDRESS,
		 DISP_PDELTA,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_STATUS",			/* Display Status */
		 DISP0_BASE_ADDRESS,
		 DISP_STATUS,
		 0x00000003,
		 0x00000000,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_MA_CTL",			/* Display Memory Access Control */
		 DISP0_BASE_ADDRESS,
		 DISP_MA_CTL,
		 0x07ffffff,
		 0x07ffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_LUMA_BA",			/* Display  Luma   Source Pixmap Memory Location*/
		 DISP0_BASE_ADDRESS,
		 DISP_LUMA_BA,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_CHR_BA",			/* Display Chroma Source Pixmap Memory Location */
		 DISP0_BASE_ADDRESS,
		 DISP_CHR_BA,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_PMP",			/* Display Pixmap Memory Pitch */
		 DISP0_BASE_ADDRESS,
		 DISP_PMP,
		 0x0000ffff,
		 0x0000ffff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_LUMA_XY",			/* Display Luma   First Pixel Source Position */
		 DISP0_BASE_ADDRESS,
		 DISP_LUMA_XY,
		 0x07ff07ff,
		 0x07ff07ff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_CHR_XY",			/* Display Chroma First Pixel Source Position */
		 DISP0_BASE_ADDRESS,
		 DISP_CHR_XY,
		 0x07ff07ff,
		 0x07ff07ff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_LUMA_SIZE",			/* Display Luma   Source Window Memory Size */
		 DISP0_BASE_ADDRESS,
		 DISP_LUMA_SIZE,
		 0x07ff07ff,
		 0x07ff07ff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_CHR_SIZE",			/* Display Chroma Source Window Memory Size */
		 DISP0_BASE_ADDRESS,
		 DISP_CHR_SIZE,
		 0x07ff07ff,
		 0x07ff07ff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_HFP",			/* Display Horizontal Filters Pointer */
		 DISP0_BASE_ADDRESS,
		 DISP_HFP,
		 0xfffffff0,
		 0xfffffff0,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_VFP",			/* Display Vertical Filters Pointer */
		 DISP0_BASE_ADDRESS,
		 DISP_VFP,
		 0xfffffff0,
		 0xfffffff0,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_PKZ",			/* Display Maximum Packet Size */
		 DISP0_BASE_ADDRESS,
		 DISP_PKZ,
		 0x00000027,
		 0x00000027,
		 0,
		 REG_32B,
		 0,
		},
#ifndef GAMMA_7710_NO_DISP_COEFF
		{"DISP1_LHF_COEF",			/* Display Luma Horizontal Filter Coefficients */
		 DISP0_BASE_ADDRESS,
		 DISP_LHF_COEF0,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B|REG_ARRAY| REG_SPECIAL,
		 35,
		},
		{"DISP1_LVF_COEF",			/* Display Luma Vertical Filter Coefficients */
		 DISP0_BASE_ADDRESS,
		 DISP_LVF_COEF0,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B|REG_ARRAY| REG_SPECIAL,
		 22,
		},
		{"DISP1_CHF_COEF",			/* Display Chroma Horizontal Filter Coefficients */
		 DISP0_BASE_ADDRESS,
		 DISP_CHF_COEF0,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B|REG_ARRAY| REG_SPECIAL,
		 35,
		},
		{"DISP1_CVF_COEF",			/* Display Chroma Vertical Filter Coefficients */
		 DISP0_BASE_ADDRESS,
		 DISP_CVF_COEF0,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B|REG_ARRAY| REG_SPECIAL,
		 22,
		},
#endif /* GAMMA_7710_NO_DISP_COEFF */
#if defined(GAMMA_7710) || defined(GAMMA_7100)
		{"DISP1_LMU_CTRL",			/* LMU Control register */
		 LMU_BASE_ADDRESS,
		 LMU_CTRL,
		 0x7fff7fff,
		 0x7fff7fff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_LMU_LMP",			/* LMU luma memory pointer */
		 LMU_BASE_ADDRESS,
		 LMU_LMP,
		 0x03ffff00,
		 0x03ffff00,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_LMU_CMP",			/* LMU chroma memory pointer */
		 LMU_BASE_ADDRESS,
		 LMU_CMP,
		 0x03ffff00,
		 0x03ffff00,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_LMU_BPPL",			/* LMU input picture horizontal size */
		 LMU_BASE_ADDRESS,
		 LMU_BPPL,
		 0x0000007f,
		 0x0000007f,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_LMU_CFG",			/* LMU configuration register */
		 LMU_BASE_ADDRESS,
		 LMU_CFG,
		 0x00000007,
		 0x00000007,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_LMU_VINL",			/* LMU input picture vertical size */
		 LMU_BASE_ADDRESS,
		 LMU_VINL,
		 0x000007ff,
		 0x000007ff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_LMU_MRS",			/* LMU min STBus request */
		 LMU_BASE_ADDRESS,
		 LMU_MRS,
		 0x0000ffff,
		 0x0000ffff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_LMU_CHK",			/* LMU max chunk size */
		 LMU_BASE_ADDRESS,
		 LMU_CHK,
		 0x000000ff,
		 0x000000ff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_LMU_STA",			/* LMU status register */
		 LMU_BASE_ADDRESS,
		 LMU_STA,
		 0x000000ff,
		 0x00000000,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_LMU_ITM",			/* LMU interrupt mask register */
		 LMU_BASE_ADDRESS,
		 LMU_ITM,
		 0x000000ff,
		 0x000000ff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_LMU_ITS",			/* LMU interrupt status register */
		 LMU_BASE_ADDRESS,
		 LMU_ITS,
		 0x000000ff,
		 0x00000000,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP1_LMU_AFD",			/* LMU accumulated field difference */
		 LMU_BASE_ADDRESS,
		 LMU_AFD,
		 0x0000ffff,
		 0x00000000,
		 0,
		 REG_32B,
		 0,
		},
#endif /* GAMMA_7710 || GAMMA_7100 */

#if defined(GAMMA_7109)
		{"DEI_CTL",			        /* DEI Control register */
		 DEI_BASE_ADDRESS,
		 DEI_CTL,
		 0x77FFFFFF,
		 0x77FFFFFF,
		 0x00044009,
		 REG_32B,
		 0,
		},
		{"DEI_VIEWPORT_ORIG",       /* DEI output viewport origin */
		 DEI_BASE_ADDRESS,
		 DEI_VIEWPORT_ORIG,
		 0x07FF07FF,
		 0x07FF07FF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_VIEWPORT_SIZE",       /* DEI output viewport size */
		 DEI_BASE_ADDRESS,
		 DEI_VIEWPORT_SIZE,
		 0x07FF07FF,
		 0x07FF07FF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_VF_SIZE",             /* DEI input video fields size */
		 DEI_BASE_ADDRESS,
		 DEI_VF_SIZE,
		 0x000007FF,
		 0x000007FF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_T3I_CTL",             /* STBus type 3 initiator control */
		 DEI_BASE_ADDRESS,
		 DEI_T3I_CTL,
		 0x3FFFFFFF,
		 0x3FFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_PYF_BA",             /* Previous video field, Luma buffer base address */
		 DEI_BASE_ADDRESS,
		 DEI_PYF_BA,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_CYF_BA",             /* Current video field, Luma buffer base address */
		 DEI_BASE_ADDRESS,
		 DEI_CYF_BA,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_NYF_BA",             /* Next video field, Luma buffer base address */
		 DEI_BASE_ADDRESS,
		 DEI_NYF_BA,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_PCF_BA",             /* Previous video field, Chroma buffer base address */
		 DEI_BASE_ADDRESS,
		 DEI_PCF_BA,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_CCF_BA",             /* Current video field, Chroma buffer base address */
		 DEI_BASE_ADDRESS,
		 DEI_CCF_BA,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_NCF_BA",             /* Next video field, Chroma buffer base address */
		 DEI_BASE_ADDRESS,
		 DEI_NCF_BA,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_PMF_BA",             /* Previous motion field, buffer base address */
		 DEI_BASE_ADDRESS,
		 DEI_PMF_BA,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_CMF_BA",             /* Current motion field, buffer base address */
		 DEI_BASE_ADDRESS,
		 DEI_CMF_BA,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_NMF_BA",             /* Next motion field, buffer base address */
		 DEI_BASE_ADDRESS,
		 DEI_NMF_BA,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},

#if !defined(GAMMA_7109_NO_STACK_LEVELS)
		{"DEI_YF_FORMAT",           /* Video fields, luma buffer memory format */
		 DEI_BASE_ADDRESS,
		 DEI_YF_FORMAT,
		 0x00000007,
		 0x00000007,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_YF_STACK_l0",           /* Luma buffers, address stack level 0 */
		 DEI_BASE_ADDRESS,
		 DEI_YF_STACK_l0,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_YF_STACK_l1",           /* Luma buffers, address stack level 1 */
		 DEI_BASE_ADDRESS,
		 DEI_YF_STACK_l1,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_YF_STACK_l2",           /* Luma buffers, address stack level 2 */
		 DEI_BASE_ADDRESS,
		 DEI_YF_STACK_l2,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_YF_STACK_l3",           /* Luma buffers, address stack level 3 */
		 DEI_BASE_ADDRESS,
		 DEI_YF_STACK_l3,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_YF_STACK_l4",           /* Luma buffers, address stack level 4 */
		 DEI_BASE_ADDRESS,
		 DEI_YF_STACK_l4,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_YF_STACK_p0",           /* Luma buffers, address stack level 0 */
		 DEI_BASE_ADDRESS,
		 DEI_YF_STACK_p0,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_YF_STACK_p1",           /* Luma buffers, address stack level 1 */
		 DEI_BASE_ADDRESS,
		 DEI_YF_STACK_p1,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_YF_STACK_p2",           /* Luma buffers, address stack level 2 */
		 DEI_BASE_ADDRESS,
		 DEI_YF_STACK_p2,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_CF_FORMAT",           /* Video fields, chroma buffer memory format */
		 DEI_BASE_ADDRESS,
		 DEI_CF_FORMAT,
		 0x00000077,
		 0x00000077,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_CF_STACK_l0",           /* Chroma buffers, address stack level 0 */
		 DEI_BASE_ADDRESS,
		 DEI_CF_STACK_l0,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_CF_STACK_l1",           /* Chroma buffers, address stack level 1 */
		 DEI_BASE_ADDRESS,
		 DEI_CF_STACK_l1,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_CF_STACK_l2",           /* Chroma buffers, address stack level 2 */
		 DEI_BASE_ADDRESS,
		 DEI_CF_STACK_l2,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_CF_STACK_l3",           /* Chroma buffers, address stack level 3 */
		 DEI_BASE_ADDRESS,
		 DEI_CF_STACK_l3,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_CF_STACK_l4",           /* Chroma buffers, address stack level 4 */
		 DEI_BASE_ADDRESS,
		 DEI_CF_STACK_l4,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_CF_STACK_p0",           /* Chroma buffers, address stack level 0 */
		 DEI_BASE_ADDRESS,
		 DEI_CF_STACK_p0,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_CF_STACK_p1",           /* Chroma buffers, address stack level 1 */
		 DEI_BASE_ADDRESS,
		 DEI_CF_STACK_p1,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_CF_STACK_p2",           /* Chroma buffers, address stack level 2 */
		 DEI_BASE_ADDRESS,
		 DEI_CF_STACK_p2,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_MF_STACK_l0",           /* motion buffers, address stack level 0 */
		 DEI_BASE_ADDRESS,
		 DEI_MF_STACK_l0,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_MF_STACK_p0",           /* motion buffers, address stack level 0 */
		 DEI_BASE_ADDRESS,
		 DEI_MF_STACK_p0,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
#endif  /* if !defined(GAMMA_7109_NO_STACK_LEVELS) */

		{"DEI_DEBUG1",              /* Some controls for debug */
		 DEI_BASE_ADDRESS,
		 DEI_DEBUG1,
		 0x00000007,
		 0x00000007,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"DEI_STATUS1",              /* Some flags for debug */
		 DEI_BASE_ADDRESS,
		 DEI_STATUS1,
		 0x007FFFFF,
		 0x00400000,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"VHSRC_CTL",               /* VHSRC pipe control */
		 DEI_BASE_ADDRESS,
		 VHSRC_CTL,
		 0x03FF003F,
		 0x03FF003F,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"VHSRC_Y_HSRC",            /* Luma horizontal SRC FSM control */
		 DEI_BASE_ADDRESS,
		 VHSRC_Y_HSRC,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"VHSRC_Y_VSRC",            /* Luma vertical SRC FSM control */
		 DEI_BASE_ADDRESS,
		 VHSRC_Y_VSRC,
		 0x7FFFFFFF,
		 0x7FFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"VHSRC_C_HSRC",            /* Chroma horizontal SRC FSM control */
		 DEI_BASE_ADDRESS,
		 VHSRC_C_HSRC,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"VHSRC_C_VSRC",            /* Chroma vertical SRC FSM control */
		 DEI_BASE_ADDRESS,
		 VHSRC_C_VSRC,
		 0x7FFFFFFF,
		 0x7FFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"VHSRC_TARGET_SIZE",       /* Target size */
		 DEI_BASE_ADDRESS,
		 VHSRC_TARGET_SIZE,
		 0x07FF07FF,
		 0x07FF07FF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"VHSRC_NLZZD_Y",           /* Non linear zoom zone definition for luma SRC */
		 DEI_BASE_ADDRESS,
		 VHSRC_NLZZD_Y,
		 0x07FF07FF,
		 0x07FF07FF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"VHSRC_NLZZD_C",           /* Non linear zoom zone definition for chroma SRC */
		 DEI_BASE_ADDRESS,
		 VHSRC_NLZZD_C,
		 0x07FF07FF,
		 0x07FF07FF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"VHSRC_PDELTA",           /* Non linear zoom increment step definition */
		 DEI_BASE_ADDRESS,
		 VHSRC_PDELTA,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"VHSRC_Y_SIZE",           /* Luma source pixmap size */
		 DEI_BASE_ADDRESS,
		 VHSRC_Y_SIZE,
		 0x000007FF,
		 0x000007FF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"VHSRC_C_SIZE",           /* Chroma source pixmap size */
		 DEI_BASE_ADDRESS,
		 VHSRC_C_SIZE,
		 0x000007FF,
		 0x000007FF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"VHSRC_HCOEF_BA",         /* Horizontal filter coefficients base address */
		 DEI_BASE_ADDRESS,
		 VHSRC_HCOEF_BA,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
		{"VHSRC_VCOEF_BA",         /* Vertical filter coefficients base address */
		 DEI_BASE_ADDRESS,
		 VHSRC_VCOEF_BA,
		 0xFFFFFFFF,
		 0xFFFFFFFF,
		 0x00000000,
		 REG_32B,
		 0,
		},
#endif  /* GAMMA_7109 */

#endif /* GAMMA_DISP1_ACTIVE */

#ifdef GAMMA_DISP2_ACTIVE /* SD Display (1/2 HD Display) */
		{"DISP2_CTL",			/* Display Control */
		 DISP1_BASE_ADDRESS,
		 DISP_CTL,
		 0xe0f00000,
		 0xe0f00000,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP2_LUMA_HSRC",			/* Display Luma HSRC */
		 DISP1_BASE_ADDRESS,
		 DISP_LUMA_HSRC,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP2_LUMA_VSRC",			/* Display Luma VSRC */
		 DISP1_BASE_ADDRESS,
		 DISP_LUMA_VSRC,
		 0x7fffffff,
		 0x7fffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP2_CHR_HSRC",			/* Display Chroma HSRC */
		 DISP1_BASE_ADDRESS,
		 DISP_CHR_HSRC,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP2_CHR_VSRC",			/* Display Chroma VSRC */
		 DISP1_BASE_ADDRESS,
		 DISP_CHR_VSRC,
		 0xefffffff,
		 0xefffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP2_TARGET_SIZE",			/* Display Target Pixmap Size */
		 DISP1_BASE_ADDRESS,
		 DISP_TARGET_SIZE,
		 0x07ff07ff,
		 0x07ff07ff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP2_NLZZD_Y",			/* Display Luma   Non Linear Zoom Zone Definition */
		 DISP1_BASE_ADDRESS,
		 DISP_NLZZD_Y,
		 0x07ff07ff,
		 0x07ff07ff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP2_NLZZD_C",			/* Display Chroma Non Linear Zoom Zone Definition */
		 DISP1_BASE_ADDRESS,
		 DISP_NLZZD_C,
		 0x07ff07ff,
		 0x07ff07ff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP2_PDELTA",			/* Display Non Linear Zoom - Increment Step Definition */
		 DISP1_BASE_ADDRESS,
		 DISP_PDELTA,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP2_STATUS",			/* Display Status */
		 DISP1_BASE_ADDRESS,
		 DISP_STATUS,
		 0x00000003,
		 0x00000000,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP2_MA_CTL",			/* Display Memory Access Control */
		 DISP1_BASE_ADDRESS,
		 DISP_MA_CTL,
		 0x07ffffff,
		 0x07ffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP2_LUMA_BA",			/* Display  Luma   Source Pixmap Memory Location*/
		 DISP1_BASE_ADDRESS,
		 DISP_LUMA_BA,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP2_CHR_BA",			/* Display Chroma Source Pixmap Memory Location */
		 DISP1_BASE_ADDRESS,
		 DISP_CHR_BA,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP2_PMP",			/* Display Pixmap Memory Pitch */
		 DISP1_BASE_ADDRESS,
		 DISP_PMP,
		 0x0000ffff,
		 0x0000ffff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP2_LUMA_XY",			/* Display Luma   First Pixel Source Position */
		 DISP1_BASE_ADDRESS,
		 DISP_LUMA_XY,
		 0x07ff07ff,
		 0x07ff07ff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP2_CHR_XY",			/* Display Chroma First Pixel Source Position */
		 DISP1_BASE_ADDRESS,
		 DISP_CHR_XY,
		 0x07ff07ff,
		 0x07ff07ff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP2_LUMA_SIZE",			/* Display Luma   Source Window Memory Size */
		 DISP1_BASE_ADDRESS,
		 DISP_LUMA_SIZE,
		 0x07ff07ff,
		 0x07ff07ff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP2_CHR_SIZE",			/* Display Chroma Source Window Memory Size */
		 DISP1_BASE_ADDRESS,
		 DISP_CHR_SIZE,
		 0x07ff07ff,
		 0x07ff07ff,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP2_HFP",			/* Display Horizontal Filters Pointer */
		 DISP1_BASE_ADDRESS,
		 DISP_HFP,
		 0xfffffff0,
		 0xfffffff0,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP2_VFP",			/* Display Vertical Filters Pointer */
		 DISP1_BASE_ADDRESS,
		 DISP_VFP,
		 0xfffffff0,
		 0xfffffff0,
		 0,
		 REG_32B,
		 0,
		},
		{"DISP2_PKZ",			/* Display Maximum Packet Size */
		 DISP1_BASE_ADDRESS,
		 DISP_PKZ,
		 0x00000027,
		 0x00000027,
		 0,
		 REG_32B,
		 0,
		},
#ifndef GAMMA_7710_NO_DISP_COEFF
		{"DISP2_LHF_COEF",			/* Display Luma Horizontal Filter Coefficients */
		 DISP1_BASE_ADDRESS,
		 DISP_LHF_COEF0,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B|REG_ARRAY| REG_SPECIAL,
		 35,
		},
		{"DISP2_LVF_COEF",			/* Display Luma Vertical Filter Coefficients */
		 DISP1_BASE_ADDRESS,
		 DISP_LVF_COEF0,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B|REG_ARRAY| REG_SPECIAL,
		 22,
		},
		{"DISP2_CHF_COEF",			/* Display Chroma Horizontal Filter Coefficients */
		 DISP1_BASE_ADDRESS,
		 DISP_CHF_COEF0,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B|REG_ARRAY| REG_SPECIAL,
		 35,
		},
		{"DISP2_CVF_COEF",			/* Display Chroma Vertical Filter Coefficients */
		 DISP1_BASE_ADDRESS,
		 DISP_CVF_COEF0,
		 0xffffffff,
		 0xffffffff,
		 0,
		 REG_32B|REG_ARRAY| REG_SPECIAL,
		 22,
		},
#endif /* GAMMA_7710_NO_DISP_COEFF */
#endif /* GAMMA_DISP2_ACTIVE */

	};

		/* Nbr of registers */
#define GAMMA_REGISTERS (sizeof(GammaReg)/sizeof(Register_t))

#ifdef __cplusplus
	}
#endif

#endif							/* __HALGC_GAMMA_TREG_H */
	/* ------------------------------- End of file ---------------------------- */
