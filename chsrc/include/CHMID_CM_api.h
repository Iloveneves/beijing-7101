/*******************************************************************************
* 文件名称 : CHMID_CM_api.h											
* 功能描述 : CHMID_CM模块提供给上层应用调用的功能接口函数定义，及其一些数据结构
* ，宏，常量等定义。共应用层编程调用
*
* 作者:flex
* 修改历史:
* 日期					作者						描述
* 2009/6/23				 flex							create
*
********************************************************************************/
#ifndef _CHMID_CM_API_H__ 
#define _CHMID_CM_API_H__
#include "CHDRV_NET.h"

typedef enum
{
	CHMID_CM_CHECK_FAIL = 0,			/*	检测失败*/
	CHMID_CM_INITED,					/*初始状态*/
	CHMID_CM_DOWN_FREQ_LOCKED,		/*下行已锁定*/
	CHMID_CM_UP_FREQ_LOCKED,		/*下行已锁定*/
	CHMID_CM_OFFLINE,					/*	CM不在线*/
	CHMID_CM_ONLINE 					/*	CM在线*/
}CHMID_CM_ONLINE_STATUS_e;

typedef enum
{
	CHMID_CM_OK = 0,				/*	操作成功*/
	CHMID_CM_FAIL = -1,				/*	操作失败*/
	CHMID_CM_NOT_INIT = -2,		/*	模块没有初始化*/
	CHMID_CM_ALREADY_INIT = -3,	/*    模块已经初始化*/
	CHMID_CM_TIMEOUT = -4,			/*	超时*/
	CHMID_CM_INVALID_PARAM = -5	/*	参数错误*/
}CHMID_CM_RESULT_e;

typedef struct
{
	s32_t i_InterfaceMainVer;/*为接口文档的主版本号*/
	s32_t i_InterfaceSubVer;	/*为接口文档的次版本号*/
	s32_t i_ModuleMainVer;	/*为模块实现的主版本*/
	s32_t i_ModuleSubVer;	/*为模块实现的次版本*/
}CHMID_CM_Version_t;

/*--------------------------------------------------------------------------*/
/* 函数名称 : CHMID_CM_Init								*/
/* 功能描述 : CHMID_CM模块初始化函数					*/
/* 入口参数 :无				*/
/* 出口参数 : 无		*/
/* 返回值说明：	*/
/* 注意:	开机调用一次,默认情况下,监控功能为打开			*/
/*--------------------------------------------------------------------------*/
CHMID_CM_RESULT_e CHMID_CM_Init(void);
/*--------------------------------------------------------------------------*/
/* 函数名称 : CHMID_CM_Open								*/
/* 功能描述 : 打开模块监控CM在线状态功能				*/
/* 入口参数 :无				*/
/* 出口参数 : 无		*/
/* 返回值说明：见CHMID_CM_RESULT_e定义*/
/* 注意:				*/
/*--------------------------------------------------------------------------*/
CHMID_CM_RESULT_e CHMID_CM_Open(void);
/*--------------------------------------------------------------------------*/
/* 函数名称 : CHMID_CM_Close								*/
/* 功能描述 : 关闭模块监控CM在线状态功能				*/
/* 入口参数 :无				*/
/* 出口参数 : 无		*/
/* 返回值说明：见CHMID_CM_RESULT_e定义*/
/* 注意:	在关闭监控后，需要重新打开功能需调用CHMID_CM_Open()*/
/*--------------------------------------------------------------------------*/
CHMID_CM_RESULT_e CHMID_CM_Close(void);
/*--------------------------------------------------------------------------*/
/* 函数名称 : CHMID_CM_GetVersion								*/
/* 功能描述 :得到 CHMID_CM模块版本信息				*/
/* 入口参数 :无				*/
/* 出口参数 : 无		*/
/* 返回值说明：	*/
/* 注意:					*/
/*--------------------------------------------------------------------------*/
CHMID_CM_RESULT_e CHMID_CM_GetVersion(CHMID_CM_Version_t * pVersion);
/*--------------------------------------------------------------------------*/
/* 函数名称 : CHMID_CM_CheckCMStatus								*/
/* 功能描述 : 得到当前CM在线状态					*/
/* 入口参数 :无				*/
/* 出口参数 : 无		*/
/* 返回值说明：见CHMID_CM_ONLINE_STATUS_e说明	*/
/* 注意:				*/
/*--------------------------------------------------------------------------*/
CHMID_CM_ONLINE_STATUS_e CHMID_CM_CheckCMStatus(void);

/*--------------------------------------------------------------------------*/
/* 函数名称 : CHMID_CM_GetCMMac								*/
/* 功能描述 : 得到CM的MAC地址				*/
/* 入口参数 :无			*/
/* 出口参数 : mac,得到的mac地址			*/
/* 返回值说明：成功返回0*/
/* 注意:	参数应该为一段数组的首指针，长度至少为6BYTE			*/
/*--------------------------------------------------------------------------*/
CHMID_CM_RESULT_e CHMID_CM_GetCMMac(u8_t * mac);
/*--------------------------------------------------------------------------*/
/* 函数名称 : CHMID_CM_GetCMSNNumber								*/
/* 功能描述 : 得到CM的序列号(S/N)				*/
/* 入口参数 :无			*/
/* 出口参数 : SN_NO,得到的序列号(如:)		*/
/* 返回值说明：成功返回0*/
/* 注意:	参数应该为一段数组的首指针，长度至少为20BYTE			*/
/*--------------------------------------------------------------------------*/
CHMID_CM_RESULT_e CHMID_CM_GetCMSNNumber(u8_t * SN_NO);
/*--------------------------------------------------------------------------*/
/* 函数名称 : CHMID_CM_Reboot								*/
/* 功能描述 : 重起CM				*/
/* 入口参数 :无			*/
/* 出口参数 : 无			*/
/* 返回值说明：成功返回0*/
/* 注意:				*/
/*--------------------------------------------------------------------------*/
CHMID_CM_RESULT_e CHMID_CM_Reboot(void);
/*--------------------------------------------------------------------------*/
/* 函数名称 : CHMID_CM_SetDownFreq								*/
/* 功能描述 : 设置CM的默认下行频点				*/
/* 入口参数 :	 Freq,字符串形式的频点数据(如:612000000)	*/
/* 出口参数 :	无			*/
/* 返回值说明：成功返回0*/
/* 注意:	*/
/*--------------------------------------------------------------------------*/
CHMID_CM_RESULT_e CHMID_CM_SetDownFreq(u8_t * Freq);
/*--------------------------------------------------------------------------*/
/* 函数名称 : CHMID_CM_GetUPFreq								*/
/* 功能描述 : 获取CM的上行频点				*/
/* 入口参数 :无			*/
/* 出口参数 : uc_UPFreq,字符串形式的频点数据(如:612000000)			*/
/* 返回值说明：成功返回0*/
/* 注意:	参数应该为一段数组的首指针，长度至少为20BYTE			*/
/*--------------------------------------------------------------------------*/
CHMID_CM_RESULT_e CHMID_CM_GetUPFreq(u8_t * uc_UPFreq);
/*--------------------------------------------------------------------------*/
/* 函数名称 : CHMID_CM_GetDownFreq								*/
/* 功能描述 : 获取CM的下行频点				*/
/* 入口参数 :无			*/
/* 出口参数 : uc_DownFreq,字符串形式的频点数据(如:612000000)			*/
/* 返回值说明：成功返回0		*/
/* 注意:	参数应该为一段数组的首指针，长度至少为20BYTE			*/
/*--------------------------------------------------------------------------*/
CHMID_CM_RESULT_e CHMID_CM_GetDownFreq(u8_t * uc_DownFreq);
/*--------------------------------------------------------------------------*/
/* 函数名称 : CHMID_CM_SetCheckCycleTime								*/
/* 功能描述 :设置CM状态查询周期时间(s)				*/
/* 入口参数 :	ui_time_s,新的查询时间周期(s)				*/
/* 出口参数 : 无					*/
/* 返回值说明：成功返回0				*/
/* 注意:				*/
/*--------------------------------------------------------------------------*/
CHMID_CM_RESULT_e CHMID_CM_SetCheckCycleTime(u32_t ui_time_s);
/*--------------------------------------------------------------------------*/
/* 函数名称 : CHMID_CM_GetCheckCycleTime								*/
/* 功能描述 : 获取CM状态查询周期时间(s)						*/
/* 入口参数 :无			*/
/* 出口参数 : 无			*/
/* 返回值说明：	CM状态查询周期时间(s)	*/
/* 注意:				*/
/*--------------------------------------------------------------------------*/
u32_t CHMID_CM_GetCheckCycleTime(void);

#endif
/*eof*/

